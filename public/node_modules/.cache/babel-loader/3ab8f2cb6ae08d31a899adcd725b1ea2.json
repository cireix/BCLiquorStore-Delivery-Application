{"ast":null,"code":"import decode from'jwt-decode';// store jowtoken locally\nvar setToken=function setToken(token){localStorage.setItem('store_token_id',token);};// Retrun the jwtoken from local storage\nvar getToken=function getToken(){return localStorage.getItem('store_token_id');};// check if the token is expired\nvar isTokenExpired=function isTokenExpired(token){try{var _info=decode(token);if(_info.exp<Date.now()/1000){return true;}else return false;}catch(error){return false;}};// check login status\nvar isLogin=function isLogin(){var status=false;var jwt=getToken();if(jwt!=null){if(!isTokenExpired(jwt))status=true;};return status;};// return a list of all users\nvar getUser=function getUser(){if(isLogin()){var jwt=getToken();var user=decode(jwt);return user;}else{return{};}};// remove the jwtoken stored locally\nvar logOut=function logOut(){localStorage.removeItem('store_token_id');};global.auth={setToken:setToken,getUser:getUser,logOut:logOut};","map":{"version":3,"sources":["/home/eric/Desktop/CMPT276/CMPT276/client/src/commons/auth.js"],"names":["decode","setToken","token","localStorage","setItem","getToken","getItem","isTokenExpired","_info","exp","Date","now","error","isLogin","status","jwt","getUser","user","logOut","removeItem","global","auth"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,YAAnB,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CACtBC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAuCF,KAAvC,EACH,CAFD,CAIA;AACA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SACbF,CAAAA,YAAY,CAACG,OAAb,CAAqB,gBAArB,CADa,EAAjB,CAIA;AACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAL,KAAK,CAAI,CAC5B,GAAI,CACA,GAAMM,CAAAA,KAAK,CAAGR,MAAM,CAACE,KAAD,CAApB,CACA,GAAIM,KAAK,CAACC,GAAN,CAAYC,IAAI,CAACC,GAAL,GAAa,IAA7B,CAAmC,CAC/B,MAAO,KAAP,CACH,CAFD,IAEO,OAAO,MAAP,CACV,CAAC,MAAOC,KAAP,CAAc,CACZ,MAAO,MAAP,CACH,CACJ,CATD,CAWA;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAIC,CAAAA,MAAM,CAAG,KAAb,CACA,GAAMC,CAAAA,GAAG,CAAGV,QAAQ,EAApB,CACA,GAAIU,GAAG,EAAI,IAAX,CAAiB,CACb,GAAI,CAACR,cAAc,CAACQ,GAAD,CAAnB,CAA0BD,MAAM,CAAG,IAAT,CAC7B,EACD,MAAOA,CAAAA,MAAP,CACH,CAPD,CASA;AACA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAGH,OAAO,EAAV,CAAc,CACV,GAAME,CAAAA,GAAG,CAAGV,QAAQ,EAApB,CACA,GAAMY,CAAAA,IAAI,CAAGjB,MAAM,CAACe,GAAD,CAAnB,CACA,MAAOE,CAAAA,IAAP,CACH,CAJD,IAIO,CACH,MAAO,EAAP,CACH,CACJ,CARD,CAUA;AACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBf,YAAY,CAACgB,UAAb,CAAwB,gBAAxB,EACH,CAFD,CAIAC,MAAM,CAACC,IAAP,CAAc,CACVpB,QAAQ,CAARA,QADU,CAEVe,OAAO,CAAPA,OAFU,CAGVE,MAAM,CAANA,MAHU,CAAd","sourcesContent":["import decode from 'jwt-decode';\n\n// store jowtoken locally\nconst setToken = token => {\n    localStorage.setItem('store_token_id', token);\n}\n\n// Retrun the jwtoken from local storage\nconst getToken = () => (\n    localStorage.getItem('store_token_id')\n);\n\n// check if the token is expired\nconst isTokenExpired = token => {\n    try {\n        const _info = decode(token);\n        if (_info.exp < Date.now() / 1000) {\n            return true;\n        } else return false;\n    } catch (error) {\n        return false;\n    }\n}\n\n// check login status\nconst isLogin = () => {\n    var status = false;\n    const jwt = getToken();\n    if (jwt != null) {\n        if (!isTokenExpired(jwt)) status = true;\n    };\n    return status;\n}\n\n// return a list of all users\nconst getUser = () => {\n    if(isLogin()) {\n        const jwt = getToken();\n        const user = decode(jwt);\n        return user;\n    } else {\n        return {};\n    }\n}\n\n// remove the jwtoken stored locally\nconst logOut = () => {\n    localStorage.removeItem('store_token_id');\n}\n\nglobal.auth = {\n    setToken,\n    getUser,\n    logOut\n}"]},"metadata":{},"sourceType":"module"}