{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project276\\\\CMPT276\\\\public\\\\src\\\\pages\\\\ForgotPw.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nexport default function ForgotPw(props) {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm(); // Get phone number that user input in the form\n\n  const onSubmit = async data => {\n    try {\n      const {\n        phoneNumber\n      } = data; // post phone number to server side\n      // api/users/forgotpw\n\n      const res = await axios.post('api/users/forgotpw', {\n        phone: phoneNumber\n      });\n      toast.success(\"Verification code sent\");\n    } catch (error) {\n      const message = error.response.data.message;\n      toast.error(message);\n    }\n  }; // Get phone number, verification code, password that user input in the form\n\n\n  const onSubmit2 = async data => {\n    try {\n      const {\n        phoneNumber,\n        code,\n        password\n      } = data; // post phone number to server side\n      // api/users/forgotpw2\n\n      const res = await axios.post('api/users/forgotpw2', {\n        phone: phoneNumber,\n        code: code,\n        password: password\n      }); // route to the login page\n\n      props.history.push('/login');\n    } catch (error) {\n      const message = error.response.data.message;\n      toast.error(message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"box login_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field is-expanded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field has-addons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"button is-static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, \"+1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `input ${errors.phoneNumber && 'is-danger'}`,\n    placeholder: \"Phone number\",\n    name: \"phoneNumber\",\n    ref: register({\n      pattern: {\n        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n        message: \"invalid phone number\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  })), errors.phoneNumber && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 53\n    }\n  }, errors.phoneNumber.message)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    onClick: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Get Authentication Code\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Authentication Code\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.code && 'is-danger'}`,\n    type: \"number\",\n    placeholder: \"Authentication Code\",\n    name: \"code\",\n    ref: register({\n      maxLength: {\n        value: 6,\n        message: 'should be 6 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }), errors.code && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 42\n    }\n  }, errors.code.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.password && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      // required: true,\n      minLength: {\n        value: 6,\n        message: 'cannot be less than 6 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 46\n    }\n  }, errors.password.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.password2 && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    ref: register({\n      // required: true,\n      validate: value => value === watch('password')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }), errors.password2 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 47\n    }\n  }, \"must match the qrevious entry\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    onClick: handleSubmit(onSubmit2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["F:/Project276/CMPT276/public/src/pages/ForgotPw.js"],"names":["React","useForm","axios","toast","ForgotPw","props","register","handleSubmit","errors","watch","onSubmit","data","phoneNumber","res","post","phone","success","error","message","response","onSubmit2","code","password","history","push","pattern","value","maxLength","minLength","password2","validate"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function ForgotPw(props) {\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n    \r\n    // Get phone number that user input in the form\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const { phoneNumber } = data;\r\n            // post phone number to server side\r\n            // api/users/forgotpw\r\n            const res = await axios.post('api/users/forgotpw', { phone: phoneNumber });\r\n            toast.success(\"Verification code sent\");\r\n        } catch (error) {\r\n            const message = error.response.data.message;\r\n            toast.error(message);\r\n        }\r\n    };\r\n\r\n    // Get phone number, verification code, password that user input in the form\r\n    const onSubmit2 = async (data) => {\r\n        try {\r\n            const { phoneNumber, code, password } = data;\r\n            // post phone number to server side\r\n            // api/users/forgotpw2\r\n            const res = await axios.post('api/users/forgotpw2', { phone: phoneNumber, code: code, password: password });\r\n            // route to the login page\r\n            props.history.push('/login');\r\n        } catch (error) {\r\n            const message = error.response.data.message;\r\n            toast.error(message);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"login_wrapper\">\r\n            <form className=\"box login_box\" >\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Phone Number</label>             \r\n                    <div class=\"field-body\">\r\n                        <div class=\"field is-expanded\">\r\n                            <div class=\"field has-addons\">\r\n                                <p class=\"button is-static\">+1</p>\r\n                                <input \r\n                                type=\"text\" \r\n                                className={`input ${errors.phoneNumber && 'is-danger'}`}\r\n                                placeholder=\"Phone number\" \r\n                                name=\"phoneNumber\"\r\n                                ref={register({\r\n                                    \r\n                                    pattern:{\r\n                                        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\r\n                                        message: \"invalid phone number\"\r\n                                }})} />  \r\n                            </div>\r\n                            { errors.phoneNumber && <p className=\"helper has-text-danger\">{ errors.phoneNumber.message }</p >}\r\n                        </div>\r\n                    </div>                        \r\n                </div>\r\n\r\n                <div className=\"control\">\r\n                    <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit)}>Get Authentication Code</button>\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Authentication Code</label>\r\n                    <div className=\"control\">\r\n                        <input \r\n                        className={`input ${errors.code && 'is-danger'}`}  \r\n                        type=\"number\" \r\n                        placeholder=\"Authentication Code\" \r\n                        name='code'     \r\n                        ref={ register({       \r\n                            maxLength: {\r\n                                value: 6,\r\n                                message: 'should be 6 digits'\r\n                            }}) }  />   \r\n                        { errors.code && <p className=\"helper has-text-danger\">{ errors.code.message }</p> }  \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Password</label>\r\n                    <div className=\"control\">\r\n                        <input \r\n                        className={`input ${errors.password && 'is-danger'}`}\r\n                        type=\"text\" \r\n                        placeholder=\"Password\" \r\n                        name='password'     \r\n                        ref={ register({ \r\n                            // required: true,\r\n                            minLength: {\r\n                                value: 6,\r\n                                message: 'cannot be less than 6 digits'\r\n                            }}) } />\r\n                        { errors.password && <p className=\"helper has-text-danger\">{ errors.password.message }</p> } \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Confirm Password</label>\r\n                    <div className=\"control\">\r\n                        <input \r\n                        className={`input ${errors.password2 && 'is-danger'}`}  \r\n                        type=\"text\" \r\n                        placeholder=\"Confirm Password\" \r\n                        name='password2'     \r\n                        ref={ register({       \r\n                            // required: true,\r\n                            validate: (value) => value === watch('password')\r\n                            }) }  />   \r\n                        { errors.password2 && <p className=\"helper has-text-danger\">must match the qrevious entry</p> }  \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"control\">\r\n                    <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit2)}>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>      \r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}