{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/CMPT276/CMPT276/public/src/pages/SignUp.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport decode from 'jwt-decode';\nimport { render } from 'node-sass';\nexport default class SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = data => {\n      const {\n        nickname,\n        phoneNumber,\n        password\n      } = data; // post to server side for register   \n      // api/users/register'     \n\n      axios.post('api/users/register', {\n        name: nickname,\n        phone: phoneNumber,\n        password: password,\n        password2: password\n      }).then(res => {\n        console.log('res=>', res);\n        toast.success('Sent verification code');\n        this.setState({\n          codeSent: true\n        });\n      }).catch(err => toast.error(err.response.data.message));\n    };\n\n    this.onSubmit2 = async data => {\n      try {\n        const {\n          phoneNumber,\n          code\n        } = data; // post to server side for register\n        // api/users/register2\n\n        const res = await axios.post('api/users/register2', {\n          phone: phoneNumber,\n          code\n        }); // receive a jwtoken from server side if successful\n\n        const jwToken = res.data.token.replace('Bearer ', '');\n        console.log(decode(jwToken)); // store the token locally\n\n        global.auth.setToken(jwToken); // route to the home page \n\n        this.props.history.push('/');\n        toast.success(\"Sign up successfully!\");\n      } catch (error) {\n        const message = error.response.data.message;\n        toast.error(message);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.state = {\n      codeSent: false\n    };\n  } // Get name, phone number, and password that user input in the form\n\n\n  render() {\n    const {\n      register,\n      handleSubmit,\n      errors,\n      watch\n    } = useForm();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"box login_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${errors.nickname && 'is-danger'}`,\n      type: \"text\",\n      placeholder: \"Nickname\",\n      name: \"nickname\",\n      ref: register({\n        required: true,\n        maxLength: {\n          value: 10,\n          message: 'cannot be more than 10 digits'\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }), errors.nickname && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"helper has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 50\n      }\n    }, errors.nickname.message))), !this.state.codeSent && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 46\n      }\n    }, \"NICE\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"field-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"field is-expanded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"field has-addons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      class: \"button is-static\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }, \"+1\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: `input ${errors.phoneNumber && 'is-danger'}`,\n      placeholder: \"Phone number\",\n      name: \"phoneNumber\",\n      ref: register({\n        required: true,\n        pattern: {\n          value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n          message: \"invalid phone number\"\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    })), errors.phoneNumber && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"helper has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 57\n      }\n    }, errors.phoneNumber.message)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${errors.password && 'is-danger'}`,\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      ref: register({\n        required: true,\n        minLength: {\n          value: 6,\n          message: 'cannot be less than 6 digits'\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"helper has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 50\n      }\n    }, errors.password.message))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${errors.password2 && 'is-danger'}`,\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"password2\",\n      ref: register({\n        required: true,\n        validate: value => value === watch('password')\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }), errors.password2 && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"helper has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 51\n      }\n    }, \"must match the qrevious entry\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button is-link login_button\",\n      onClick: handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, \"Get Authentication Code\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"Authentication Code\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${errors.code && 'is-danger'}`,\n      type: \"number\",\n      placeholder: \"Authentication Code\",\n      name: \"code\",\n      ref: register({\n        maxLength: {\n          value: 6,\n          message: 'should be 6 digits'\n        }\n      }),\n      disabled: this.state.codeSent ? \"\" : \"disabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }), errors.code && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"helper has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 46\n      }\n    }, errors.code.message))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button is-link login_button\",\n      onClick: handleSubmit(this.onSubmit2),\n      disabled: this.state.codeSent ? \"\" : \"disabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/eric/Desktop/CMPT276/CMPT276/public/src/pages/SignUp.js"],"names":["React","useForm","axios","toast","decode","render","SignUp","Component","onSubmit","data","nickname","phoneNumber","password","post","name","phone","password2","then","res","console","log","success","setState","codeSent","catch","err","error","response","message","onSubmit2","code","jwToken","token","replace","global","auth","setToken","props","history","push","componentDidMount","state","register","handleSubmit","errors","watch","required","maxLength","value","pattern","minLength","validate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport decode from 'jwt-decode';\nimport { render } from 'node-sass';\n\nexport default class SignUp extends React.Component{\n    componentDidMount(){\n        \n        this.state = {\n            codeSent: false\n        }\n    }\n    // Get name, phone number, and password that user input in the form\n    onSubmit = data => {    \n            const { nickname, phoneNumber, password } = data;\n            // post to server side for register   \n            // api/users/register'     \n            axios.post('api/users/register', { name: nickname, phone: phoneNumber, password: password, password2:password})\n            .then(res=>{console.log('res=>',res); \n                toast.success('Sent verification code');\n                this.setState({\n                    codeSent:true\n                })\n            })\n            .catch((err)=>toast.error(err.response.data.message));\n\n    };\n\n    // Get phone number, and verification code that user input in the form\n    onSubmit2 = async(data) => {    \n        try {\n            const { phoneNumber, code } = data;\n            // post to server side for register\n            // api/users/register2\n            const res = await axios.post('api/users/register2', { phone: phoneNumber,code });  \n            // receive a jwtoken from server side if successful\n            const jwToken = res.data.token.replace('Bearer ','');\n            console.log(decode(jwToken));\n            // store the token locally\n            global.auth.setToken(jwToken); \n            // route to the home page \n            this.props.history.push('/');\n            toast.success(\"Sign up successfully!\");\n        } catch (error) {\n            const message = error.response.data.message;\n            toast.error(message);\n        }\n};\n    render() {\n        const { register, handleSubmit, errors, watch } = useForm();\n        return(\n            <div className=\"login_wrapper\">\n                <form className=\"box login_box\" >\n                    <div className=\"field\">\n                        <label className=\"label\">Name</label>\n                        <div className=\"control\">\n                            <input \n                            className={`input ${errors.nickname && 'is-danger'}`}  \n                            type=\"text\" \n                            placeholder=\"Nickname\" \n                            name='nickname'     \n                            ref={ register({       \n                                required: true,\n                                maxLength: {\n                                    value: 10,\n                                    message: 'cannot be more than 10 digits'\n                                }}) }  />   \n                            { errors.nickname && <p className=\"helper has-text-danger\">{ errors.nickname.message }</p> }  \n                        </div>\n                    </div>\n                    {!this.state.codeSent && <div>NICE</div>}\n                    <div className=\"field\">\n                        <label className=\"label\">Phone Number</label>             \n                        <div class=\"field-body\">\n                            <div class=\"field is-expanded\">\n                                <div class=\"field has-addons\">\n                                    <p class=\"button is-static\">+1</p>\n                                    <input \n                                    type=\"text\" \n                                    className={`input ${errors.phoneNumber && 'is-danger'}`}\n                                    placeholder=\"Phone number\" \n                                    name=\"phoneNumber\"\n                                    ref={register({\n                                        required: true,\n                                        pattern:{\n                                            value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n                                            message: \"invalid phone number\"\n                                    }})} />  \n                                </div>\n                                { errors.phoneNumber && <p className=\"helper has-text-danger\">{ errors.phoneNumber.message }</p >}\n                            </div>\n                        </div>                        \n                    </div>\n\n                    <div className=\"field\">\n                        <label className=\"label\">Password</label>\n                        <div className=\"control\">\n                            <input \n                            className={`input ${errors.password && 'is-danger'}`}\n                            type=\"password\" \n                            placeholder=\"Password\" \n                            name='password'     \n                            ref={ register({ \n                                required: true,\n                                minLength: {\n                                    value: 6,\n                                    message: 'cannot be less than 6 digits'\n                                }}) } />\n                            { errors.password && <p className=\"helper has-text-danger\">{ errors.password.message }</p> } \n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <label className=\"label\">Confirm Password</label>\n                        <div className=\"control\">\n                            <input \n                            className={`input ${errors.password2 && 'is-danger'}`}  \n                            type=\"password\" \n                            placeholder=\"Confirm Password\" \n                            name='password2'     \n                            ref={ register({       \n                                required: true,\n                                validate: (value) => value === watch('password')\n                                }) }  />   \n                            { errors.password2 && <p className=\"helper has-text-danger\">must match the qrevious entry</p> }  \n                        </div>\n                    </div>\n\n                    <div className=\"control\">\n                        <button className=\"button is-link login_button\" onClick={handleSubmit(this.onSubmit)}>Get Authentication Code</button>\n                    </div>\n                    <br />\n                    <div className=\"field\">\n                        <label className=\"label\">Authentication Code</label>\n                        <div className=\"control\">\n                            <input \n                            className={`input ${errors.code && 'is-danger'}`}  \n                            type=\"number\" \n                            placeholder=\"Authentication Code\" \n                            name='code'     \n                            ref={ register({       \n                                maxLength: {\n                                    value: 6,\n                                    message: 'should be 6 digits'\n                                }}) } \n                            disabled = {(this.state.codeSent)?\"\":\"disabled\"} \n                            />   \n                            { errors.code && <p className=\"helper has-text-danger\">{ errors.code.message }</p> }  \n                        </div>\n                    </div>\n\n                    <div className=\"control\">\n                        <button className=\"button is-link login_button\" onClick={handleSubmit(this.onSubmit2)} disabled = {(this.state.codeSent)?\"\":\"disabled\"} >Submit</button>\n                    </div>\n                </form>\n            </div>      \n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}