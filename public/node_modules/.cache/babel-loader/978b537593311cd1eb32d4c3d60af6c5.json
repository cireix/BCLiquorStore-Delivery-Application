{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean\\\\nodeProject\\\\CMPT276\\\\public\\\\src\\\\pages\\\\ForgotPw.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'commons/axios';\nexport default function ForgotPw(props) {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const submitHandler = async data => {\n    try {\n      const {\n        phoneNumber\n      } = data; // post phone number to server side\n\n      const res = await axios.post('/auth/forgotpw', {\n        phoneNumber\n      }); // route to reset password page\n\n      props.history.push('/resetpw');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: \"box login_box\",\n    onSubmit: handleSubmit(submitHandler),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field is-expanded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field has-addons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"button is-static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }, \"+1\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `input ${errors.phoneNumber && 'is-danger'}`,\n    placeholder: \"Enter your phone number\",\n    name: \"phoneNumber\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n        message: \"invalid phone number\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  })), errors.phoneNumber && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 53\n    }\n  }, errors.phoneNumber.message)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["C:/Users/Sean/nodeProject/CMPT276/public/src/pages/ForgotPw.js"],"names":["React","useForm","axios","ForgotPw","props","register","handleSubmit","errors","submitHandler","data","phoneNumber","res","post","history","push","error","console","log","required","pattern","value","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCN,OAAO,EAAlD;;AAEA,QAAMO,aAAa,GAAG,MAAOC,IAAP,IAAgB;AAClC,QAAI;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAkBD,IAAxB,CADA,CAEA;;AACA,YAAME,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,gBAAX,EAA6B;AAAEF,QAAAA;AAAF,OAA7B,CAAlB,CAHA,CAIA;;AACAN,MAAAA,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACH,KAND,CAME,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,SAAS,EAAC,eAA1B;AAA0C,IAAA,QAAQ,EAAGT,YAAY,CAACE,aAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,KAAK,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAG,IAAA,KAAK,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADJ,eAII;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,SAAS,EAAG,SAAQD,MAAM,CAACG,WAAP,IAAsB,WAAY,EAFtD;AAGA,IAAA,WAAW,EAAC,yBAHZ;AAIA,IAAA,IAAI,EAAC,aAJL;AAKA,IAAA,GAAG,EAAEL,QAAQ,CAAC;AACVa,MAAAA,QAAQ,EAAE,IADA;AAEVC,MAAAA,OAAO,EAAC;AACJC,QAAAA,KAAK,EAAE,oDADH;AAEJC,QAAAA,OAAO,EAAE;AAFL;AAFE,KAAD,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAiBMd,MAAM,CAACG,WAAP,iBAAsB;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCH,MAAM,CAACG,WAAP,CAAmBW,OAA3D,CAjB5B,CADJ,CAFJ,CADJ,eA0BI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CA1BJ,CADJ,CADJ;AAkCH","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'commons/axios';\r\n\r\nexport default function ForgotPw(props) {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const submitHandler = async (data) => {\r\n        try {\r\n            const { phoneNumber } = data;\r\n            // post phone number to server side\r\n            const res = await axios.post('/auth/forgotpw', { phoneNumber });\r\n            // route to reset password page\r\n            props.history.push('/resetpw');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"login_wrapper\">\r\n            <form action=\"\" className=\"box login_box\" onSubmit={ handleSubmit(submitHandler) }>\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Phone Number</label>             \r\n                    <div class=\"field-body\">\r\n                        <div class=\"field is-expanded\">\r\n                            <div class=\"field has-addons\">\r\n                                <p class=\"control\">\r\n                                <p class=\"button is-static\">+1</p>\r\n                                </p>\r\n                                <input \r\n                                type=\"text\" \r\n                                className={`input ${errors.phoneNumber && 'is-danger'}`}\r\n                                placeholder=\"Enter your phone number\" \r\n                                name=\"phoneNumber\"\r\n                                ref={register({\r\n                                    required: true,\r\n                                    pattern:{\r\n                                        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\r\n                                        message: \"invalid phone number\"\r\n                                }})} />  \r\n                            </div>\r\n                            { errors.phoneNumber && <p className=\"helper has-text-danger\">{ errors.phoneNumber.message }</p >}\r\n                        </div>\r\n                    </div>                        \r\n                </div>\r\n\r\n                <div className=\"control\">\r\n                    <button className=\"button is-link login_button\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}