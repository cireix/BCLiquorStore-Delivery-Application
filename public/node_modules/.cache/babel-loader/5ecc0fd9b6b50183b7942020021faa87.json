{"ast":null,"code":"import _regeneratorRuntime from\"/home/eric/Desktop/CMPT276/CMPT276/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/eric/Desktop/CMPT276/CMPT276/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{useForm}from'react-hook-form';import{Link}from'react-router-dom';import axios from'commons/axios';import{toast}from'react-toastify';import decode from'jwt-decode';export default function Login(props){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;var submitHnadler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var phoneNumber,password,res,jwToken;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;//global.auth.logOut();\nphoneNumber=data.phoneNumber,password=data.password;// post to server side for login\n_context.next=4;return axios.post('/api/users/login',{phone:phoneNumber,password:password});case 4:res=_context.sent;// receive a jwtoken from server side if success\njwToken=res.data.token.replace('Bearer ','');console.log(decode(jwToken));// store the token locally\nglobal.auth.setToken(jwToken);// route to the home page\nprops.history.push('/');toast.success(\"Login successful!\");_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.log(_context.t0);toast.error('Invalid phone number or password');case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return function submitHnadler(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"login_wrapper\"},/*#__PURE__*/React.createElement(\"form\",{action:\"\",className:\"box login_box\",onSubmit:handleSubmit(submitHnadler)},/*#__PURE__*/React.createElement(\"div\",{className:\"field\"},/*#__PURE__*/React.createElement(\"label\",{className:\"label\"},\"Phone Number\"),/*#__PURE__*/React.createElement(\"div\",{class:\"field-body\"},/*#__PURE__*/React.createElement(\"div\",{class:\"field is-expanded\"},/*#__PURE__*/React.createElement(\"div\",{class:\"field has-addons\"},/*#__PURE__*/React.createElement(\"p\",{class:\"control\"},/*#__PURE__*/React.createElement(\"p\",{class:\"button is-static\"},\"+1\")),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"input \".concat(errors.phoneNumber&&'is-danger'),placeholder:\"Phone number\",name:\"phoneNumber\",ref:register({required:true,pattern:{value:/^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,message:\"invalid phone number\"}})})),errors.phoneNumber&&/*#__PURE__*/React.createElement(\"p\",{className:\"helper has-text-danger\"},errors.phoneNumber.message)))),/*#__PURE__*/React.createElement(\"div\",{className:\"field\"},/*#__PURE__*/React.createElement(\"label\",{className:\"label\"},\"Password\"),/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"input \".concat(errors.password&&'is-danger'),placeholder:\"Password\",name:\"password\",ref:register({required:true,minLength:{value:6,message:\"cannot be less then 6 digits\"}})}),errors.password&&/*#__PURE__*/React.createElement(\"p\",{className:\"helper has-text-danger\"},errors.password.message),/*#__PURE__*/React.createElement(Link,{to:\"/forgotpw\",className:\"has-text-danger forgotpw\"},\"forgot password?\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},/*#__PURE__*/React.createElement(\"button\",{className:\"button is-link login_button\"},\"Login\"))));}","map":{"version":3,"sources":["/home/eric/Desktop/CMPT276/CMPT276/client/src/pages/Login.js"],"names":["React","useForm","Link","axios","toast","decode","Login","props","register","handleSubmit","errors","submitHnadler","data","phoneNumber","password","post","phone","res","jwToken","token","replace","console","log","global","auth","setToken","history","push","success","error","required","pattern","value","message","minLength"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom'; \nimport axios from 'commons/axios';\nimport { toast } from 'react-toastify';\nimport decode from 'jwt-decode';\n\n\nexport default function Login(props)  {\n    const { register, handleSubmit, errors } = useForm();\n\n    const submitHnadler = async (data) => {\n        try {\n            //global.auth.logOut();\n            const { phoneNumber, password } = data;\n            // post to server side for login\n            const res = await axios.post('/api/users/login', { phone:phoneNumber, password: password });  \n            // receive a jwtoken from server side if success\n            const jwToken = res.data.token.replace('Bearer ','');\n            console.log(decode(jwToken));\n            // store the token locally\n            global.auth.setToken(jwToken);  \n            // route to the home page\n            props.history.push('/');  \n            toast.success(\"Login successful!\");\n        } catch (error) {\n            console.log(error);\n            toast.error('Invalid phone number or password');\n        }\n    };\n\n    return(\n        <div className=\"login_wrapper\">\n            <form action=\"\" className=\"box login_box\" onSubmit={ handleSubmit(submitHnadler) }>\n                <div className=\"field\">\n                    <label className=\"label\">Phone Number</label>             \n                    <div class=\"field-body\">\n                        <div class=\"field is-expanded\">\n                            <div class=\"field has-addons\">\n                                <p class=\"control\">\n                                <p class=\"button is-static\">+1</p>\n                                </p>\n                                <input \n                                type=\"text\" \n                                className={`input ${errors.phoneNumber && 'is-danger'}`}\n                                placeholder=\"Phone number\" \n                                name=\"phoneNumber\"\n                                ref={register({\n                                    required: true,\n                                    pattern:{\n                                        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n                                        message: \"invalid phone number\"\n                                }})} />  \n                            </div>\n                            { errors.phoneNumber && <p className=\"helper has-text-danger\">{ errors.phoneNumber.message }</p >}\n                        </div>\n                    </div>                        \n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Password</label>\n                    <div className=\"control\">\n                        <input \n                        type=\"text\" \n                        className={`input ${errors.password && 'is-danger'}`}\n                        placeholder=\"Password\" \n                        name=\"password\"\n                        ref={register({\n                            required: true,\n                            minLength: {\n                                value: 6,\n                                message: \"cannot be less then 6 digits\"\n                            }})}/>\n                        { errors.password && <p className=\"helper has-text-danger\">{ errors.password.message }</p >}\n                        <Link to='/forgotpw' className=\"has-text-danger forgotpw\">forgot password?</Link>\n                    </div>              \n                </div>\n                \n                   \n\n                <div className=\"control\">\n                    <button className=\"button is-link login_button\">Login</button>\n                </div>\n\n            </form>         \n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}