{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project276\\\\CMPT276\\\\public\\\\src\\\\pages\\\\ForgotPw.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nexport default function ForgotPw(props) {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm(); // Get phone number that user input in the form\n\n  const onSubmit = async data => {\n    try {\n      const {\n        phoneNumber\n      } = data; // post phone number to server side\n      // api/users/forgotpw\n\n      const res = await axios.post('api/users/forgotpw', {\n        phone: phoneNumber\n      });\n      toast.success(\"Verification code sent\");\n    } catch (error) {\n      const message = error.response.data.message;\n      toast.error(message);\n    }\n  }; // Get phone number, verification code, password that user input in the form\n\n\n  const onSubmit2 = async data => {\n    const {\n      phoneNumber,\n      code,\n      password\n    } = data; // post phone number to server side\n    // api/users/forgotpw2\n\n    axios.post('api/users/forgotpw2', {\n      phone: phoneNumber,\n      code: code,\n      password: password\n    }).then(res => {\n      console.log('res=>', res);\n      toast.success(\"Passwod reset successful!\");\n      props.history.push('/login');\n    }).catch(error => {\n      const message = error.response.data.message;\n      toast.error(message);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"box login_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field is-expanded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field has-addons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"button is-static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }, \"+1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `input ${errors.phoneNumber && 'is-danger'}`,\n    placeholder: \"Phone number\",\n    name: \"phoneNumber\",\n    ref: register({\n      pattern: {\n        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n        message: \"invalid phone number\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  })), errors.phoneNumber && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 52\n    }\n  }, errors.phoneNumber.message)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    onClick: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Get Authentication Code\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Authentication Code\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.code && 'is-danger'}`,\n    type: \"number\",\n    placeholder: \"Authentication Code\",\n    name: \"code\",\n    ref: register({\n      maxLength: {\n        value: 6,\n        message: 'should be 6 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }), errors.code && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }, errors.code.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.password && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: true,\n      minLength: {\n        value: 6,\n        message: 'cannot be less than 6 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 45\n    }\n  }, errors.password.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.password2 && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    ref: register({\n      required: true,\n      validate: value => value === watch('password')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }), errors.password2 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 46\n    }\n  }, \"must match the qrevious entry\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    onClick: handleSubmit(onSubmit2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["F:/Project276/CMPT276/public/src/pages/ForgotPw.js"],"names":["React","useForm","axios","toast","ForgotPw","props","register","handleSubmit","errors","watch","onSubmit","data","phoneNumber","res","post","phone","success","error","message","response","onSubmit2","code","password","then","console","log","history","push","catch","pattern","value","maxLength","required","minLength","password2","validate"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function ForgotPw(props) {\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    // Get phone number that user input in the form\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            const { phoneNumber } = data;\r\n            // post phone number to server side\r\n            // api/users/forgotpw\r\n            const res = await axios.post('api/users/forgotpw', { phone: phoneNumber });\r\n            toast.success(\"Verification code sent\");\r\n        } catch (error) {\r\n            const message = error.response.data.message;\r\n            toast.error(message);\r\n        }\r\n    };\r\n\r\n    // Get phone number, verification code, password that user input in the form\r\n    const onSubmit2 = async (data) => {\r\n        const { phoneNumber, code, password } = data;\r\n        // post phone number to server side\r\n        // api/users/forgotpw2\r\n        axios.post('api/users/forgotpw2', { phone: phoneNumber, code: code, password: password })\r\n            .then(res => {\r\n                console.log('res=>', res);\r\n                toast.success(\"Passwod reset successful!\");\r\n                props.history.push('/login');\r\n            })\r\n            .catch(error => {\r\n                const message = error.response.data.message;\r\n                toast.error(message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"login_wrapper\">\r\n            <form className=\"box login_box\" >\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Phone Number</label>\r\n                    <div class=\"field-body\">\r\n                        <div class=\"field is-expanded\">\r\n                            <div class=\"field has-addons\">\r\n                                <p class=\"button is-static\">+1</p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={`input ${errors.phoneNumber && 'is-danger'}`}\r\n                                    placeholder=\"Phone number\"\r\n                                    name=\"phoneNumber\"\r\n                                    ref={register({\r\n\r\n                                        pattern: {\r\n                                            value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\r\n                                            message: \"invalid phone number\"\r\n                                        }\r\n                                    })} />\r\n                            </div>\r\n                            {errors.phoneNumber && <p className=\"helper has-text-danger\">{errors.phoneNumber.message}</p >}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"control\">\r\n                    <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit)}>Get Authentication Code</button>\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Authentication Code</label>\r\n                    <div className=\"control\">\r\n                        <input\r\n                            className={`input ${errors.code && 'is-danger'}`}\r\n                            type=\"number\"\r\n                            placeholder=\"Authentication Code\"\r\n                            name='code'\r\n                            ref={register({\r\n                                maxLength: {\r\n                                    value: 6,\r\n                                    message: 'should be 6 digits'\r\n                                }\r\n                            })} />\r\n                        {errors.code && <p className=\"helper has-text-danger\">{errors.code.message}</p>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Password</label>\r\n                    <div className=\"control\">\r\n                        <input\r\n                            className={`input ${errors.password && 'is-danger'}`}\r\n                            type=\"text\"\r\n                            placeholder=\"Password\"\r\n                            name='password'\r\n                            ref={register({\r\n                                required: true,\r\n                                minLength: {\r\n                                    value: 6,\r\n                                    message: 'cannot be less than 6 digits'\r\n                                }\r\n                            })} />\r\n                        {errors.password && <p className=\"helper has-text-danger\">{errors.password.message}</p>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Confirm Password</label>\r\n                    <div className=\"control\">\r\n                        <input\r\n                            className={`input ${errors.password2 && 'is-danger'}`}\r\n                            type=\"text\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name='password2'\r\n                            ref={register({\r\n                                required: true,\r\n                                validate: (value) => value === watch('password')\r\n                            })} />\r\n                        {errors.password2 && <p className=\"helper has-text-danger\">must match the qrevious entry</p>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"control\">\r\n                    <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit2)}>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}