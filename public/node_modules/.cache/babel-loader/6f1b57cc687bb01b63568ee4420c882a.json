{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean\\\\nodeProject\\\\asd\\\\CMPT276\\\\public\\\\src\\\\pages\\\\Login.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nexport default function Login(props) {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const submitHandler = async data => {\n    try {\n      //global.auth.logOut();\n      const {\n        phoneNumber,\n        password\n      } = data; // post to server side for login\n      // api/users/login\n\n      const res = await axios.post('api/users/login', {\n        phone: phoneNumber,\n        password: password\n      }); // receive a jwtoken from server side if success\n\n      const jwToken = res.data.token.replace('Bearer ', ''); // store the token locally\n\n      global.auth.setToken(jwToken); // route to the home page\n\n      props.history.push('/');\n      toast.success(\"Login successful!\");\n    } catch (error) {\n      const message = error.response.data.message;\n      toast.error(message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: \"box login_box\",\n    onSubmit: handleSubmit(submitHandler),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field is-expanded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field has-addons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"button is-static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, \"+1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `input ${errors.phoneNumber && 'is-danger'}`,\n    placeholder: \"Phone number\",\n    name: \"phoneNumber\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n        message: \"invalid phone number\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  })), errors.phoneNumber && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 53\n    }\n  }, errors.phoneNumber.message)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: `input ${errors.password && 'is-danger'}`,\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: true,\n      minLength: {\n        value: 6,\n        message: \"cannot be less then 6 digits\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 46\n    }\n  }, errors.password.message), /*#__PURE__*/React.createElement(Link, {\n    to: \"/forgotpw\",\n    className: \"has-text-danger forgotpw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"forgot password?\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Login\"))));\n}","map":{"version":3,"sources":["C:/Users/Sean/nodeProject/asd/CMPT276/public/src/pages/Login.js"],"names":["React","useForm","Link","axios","toast","Login","props","register","handleSubmit","errors","submitHandler","data","phoneNumber","password","res","post","phone","jwToken","token","replace","global","auth","setToken","history","push","success","error","message","response","required","pattern","value","minLength"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Login(props)  {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const submitHandler = async (data) => {\r\n        try {\r\n\r\n            //global.auth.logOut();\r\n            const { phoneNumber, password } = data;\r\n            // post to server side for login\r\n            // api/users/login\r\n            const res = await axios.post('api/users/login', { phone:phoneNumber, password: password});\r\n            // receive a jwtoken from server side if success\r\n            const jwToken = res.data.token.replace('Bearer ','');\r\n            // store the token locally\r\n            global.auth.setToken(jwToken);\r\n            // route to the home page\r\n            props.history.push('/');\r\n            toast.success(\"Login successful!\");\r\n        } catch (error) {\r\n            const message = error.response.data.message;\r\n            toast.error(message);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"login_wrapper\">\r\n            <form action=\"\" className=\"box login_box\" onSubmit={ handleSubmit(submitHandler) }>\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Phone Number</label>\r\n                    <div className=\"field-body\">\r\n                        <div className=\"field is-expanded\">\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"button is-static\">+1</p>\r\n                                <input\r\n                                type=\"text\"\r\n                                className={`input ${errors.phoneNumber && 'is-danger'}`}\r\n                                placeholder=\"Phone number\"\r\n                                name=\"phoneNumber\"\r\n                                ref={register({\r\n                                    required: true,\r\n                                    pattern:{\r\n                                        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\r\n                                        message: \"invalid phone number\"\r\n                                }})} />\r\n                            </div>\r\n                            { errors.phoneNumber && <p className=\"helper has-text-danger\">{ errors.phoneNumber.message }</p >}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Password</label>\r\n                    <div className=\"control\">\r\n                        <input\r\n                        type=\"password\"\r\n                        className={`input ${errors.password && 'is-danger'}`}\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        ref={register({\r\n                            required: true,\r\n                            minLength: {\r\n                                value: 6,\r\n                                message: \"cannot be less then 6 digits\"\r\n                            }})}/>\r\n                        { errors.password && <p className=\"helper has-text-danger\">{ errors.password.message }</p >}\r\n                        <Link to='/forgotpw' className=\"has-text-danger forgotpw\">forgot password?</Link>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"control\">\r\n                    <button className=\"button is-link login_button\">Login</button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}