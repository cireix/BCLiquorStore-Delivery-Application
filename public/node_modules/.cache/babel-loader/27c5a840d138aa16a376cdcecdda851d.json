{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean\\\\nodeProject\\\\asd\\\\CMPT276\\\\public\\\\src\\\\pages\\\\SignUp.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport decode from 'jwt-decode';\nimport Header from 'components/Header';\nexport default function SignUp(props) {\n  const user = global.auth.getUser();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n  var [codeSent, setCodeSent] = useState(false); // Get name, phone number, and password that user input in the form\n\n  const onSubmit = data => {\n    const {\n      nickname,\n      phoneNumber,\n      password\n    } = data; // post to server side for register\n    // api/users/register'\n\n    axios.post('api/users/register', {\n      name: nickname,\n      phone: phoneNumber,\n      password: password,\n      password2: password\n    }).then(res => {\n      console.log('res=>', res);\n      toast.success('Sent verification code');\n      setCodeSent(true);\n    }).catch(err => toast.error(err.response.data.message));\n  }; // Get phone number, and verification code that user input in the form\n\n\n  const onSubmit2 = async data => {\n    try {\n      const {\n        phoneNumber,\n        code\n      } = data; // post to server side for register\n      // api/users/register2\n\n      const res = await axios.post('api/users/register2', {\n        phone: phoneNumber,\n        code\n      }); // receive a jwtoken from server side if successful\n\n      const jwToken = res.data.token.replace('Bearer ', '');\n      console.log(decode(jwToken)); // store the token locally\n\n      global.auth.setToken(jwToken); // route to the home page \n\n      props.history.push('/');\n      toast.success(\"Sign up successfully!\");\n    } catch (error) {\n      const message = error.response.data.message;\n      toast.error(message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"box login_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.nickname && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Nickname\",\n    name: \"nickname\",\n    ref: register({\n      required: true,\n      maxLength: {\n        value: 10,\n        message: 'cannot be more than 10 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }), errors.nickname && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 50\n    }\n  }, errors.nickname.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field is-expanded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field has-addons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"button is-static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }, \"+1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `input ${errors.phoneNumber && 'is-danger'}`,\n    placeholder: \"Phone number\",\n    name: \"phoneNumber\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n        message: \"invalid phone number\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 37\n    }\n  })), errors.phoneNumber && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 57\n    }\n  }, errors.phoneNumber.message)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.password && 'is-danger'}`,\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: true,\n      minLength: {\n        value: 6,\n        message: 'cannot be less than 6 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 50\n    }\n  }, errors.password.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.password2 && 'is-danger'}`,\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    ref: register({\n      required: true,\n      validate: value => value === watch('password')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }), errors.password2 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 51\n    }\n  }, \"must match the qrevious entry\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    onClick: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"Get Authentication Code\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"Authentication Code\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    disabled: codeSent ? \"\" : \"disabled\",\n    className: `input ${errors.code && 'is-danger'}`,\n    type: \"number\",\n    placeholder: \"Authentication Code\",\n    name: \"code\",\n    ref: register({\n      maxLength: {\n        value: 6,\n        message: 'should be 6 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }), errors.code && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 46\n    }\n  }, errors.code.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    onClick: handleSubmit(onSubmit2),\n    disabled: codeSent ? \"\" : \"disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, \"Submit\")))));\n}","map":{"version":3,"sources":["C:/Users/Sean/nodeProject/asd/CMPT276/public/src/pages/SignUp.js"],"names":["React","useState","useForm","axios","toast","decode","Header","SignUp","props","user","global","auth","getUser","register","handleSubmit","errors","watch","codeSent","setCodeSent","onSubmit","data","nickname","phoneNumber","password","post","name","phone","password2","then","res","console","log","success","catch","err","error","response","message","onSubmit2","code","jwToken","token","replace","setToken","history","push","required","maxLength","value","pattern","minLength","validate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,QAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYC,OAAZ,EAAb;AAEA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAA4Cd,OAAO,EAAzD;AAEA,MAAI,CAACe,QAAD,EAAUC,WAAV,IAAyBjB,QAAQ,CAAC,KAAD,CAArC,CALkC,CAMlC;;AACA,QAAMkB,QAAQ,GAAGC,IAAI,IAAI;AACjB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,WAAZ;AAAyBC,MAAAA;AAAzB,QAAsCH,IAA5C,CADiB,CAEjB;AACA;;AACAjB,IAAAA,KAAK,CAACqB,IAAN,CAAW,oBAAX,EAAiC;AAAEC,MAAAA,IAAI,EAAEJ,QAAR;AAAkBK,MAAAA,KAAK,EAAEJ,WAAzB;AAAsCC,MAAAA,QAAQ,EAAEA,QAAhD;AAA0DI,MAAAA,SAAS,EAACJ;AAApE,KAAjC,EACCK,IADD,CACMC,GAAG,IAAE;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,GAApB;AACRzB,MAAAA,KAAK,CAAC4B,OAAN,CAAc,wBAAd;AACAd,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAJD,EAKCe,KALD,CAKQC,GAAD,IAAO9B,KAAK,CAAC+B,KAAN,CAAYD,GAAG,CAACE,QAAJ,CAAahB,IAAb,CAAkBiB,OAA9B,CALd;AAOP,GAXD,CAPkC,CAoBlC;;;AACA,QAAMC,SAAS,GAAG,MAAMlB,IAAN,IAAe;AAC7B,QAAI;AACA,YAAM;AAAEE,QAAAA,WAAF;AAAeiB,QAAAA;AAAf,UAAwBnB,IAA9B,CADA,CAEA;AACA;;AACA,YAAMS,GAAG,GAAG,MAAM1B,KAAK,CAACqB,IAAN,CAAW,qBAAX,EAAkC;AAAEE,QAAAA,KAAK,EAAEJ,WAAT;AAAqBiB,QAAAA;AAArB,OAAlC,CAAlB,CAJA,CAKA;;AACA,YAAMC,OAAO,GAAGX,GAAG,CAACT,IAAJ,CAASqB,KAAT,CAAeC,OAAf,CAAuB,SAAvB,EAAiC,EAAjC,CAAhB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY1B,MAAM,CAACmC,OAAD,CAAlB,EAPA,CAQA;;AACA9B,MAAAA,MAAM,CAACC,IAAP,CAAYgC,QAAZ,CAAqBH,OAArB,EATA,CAUA;;AACAhC,MAAAA,KAAK,CAACoC,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACAzC,MAAAA,KAAK,CAAC4B,OAAN,CAAc,uBAAd;AACH,KAbD,CAaE,OAAOG,KAAP,EAAc;AACZ,YAAME,OAAO,GAAGF,KAAK,CAACC,QAAN,CAAehB,IAAf,CAAoBiB,OAApC;AACAjC,MAAAA,KAAK,CAAC+B,KAAN,CAAYE,OAAZ;AACH;AACR,GAlBG;;AAqBA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE5B,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,SAAS,EAAG,SAAQM,MAAM,CAACM,QAAP,IAAmB,WAAY,EADnD;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,WAAW,EAAC,UAHZ;AAIA,IAAA,IAAI,EAAC,UAJL;AAKA,IAAA,GAAG,EAAGR,QAAQ,CAAC;AACXiC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,SAAS,EAAE;AACPC,QAAAA,KAAK,EAAE,EADA;AAEPX,QAAAA,OAAO,EAAE;AAFF;AAFA,KAAD,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYMtB,MAAM,CAACM,QAAP,iBAAmB;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCN,MAAM,CAACM,QAAP,CAAgBgB,OAAxD,CAZzB,CAFJ,CADJ,eAmBI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,KAAK,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,SAAS,EAAG,SAAQtB,MAAM,CAACO,WAAP,IAAsB,WAAY,EAFtD;AAGA,IAAA,WAAW,EAAC,cAHZ;AAIA,IAAA,IAAI,EAAC,aAJL;AAKA,IAAA,GAAG,EAAET,QAAQ,CAAC;AACViC,MAAAA,QAAQ,EAAE,IADA;AAEVG,MAAAA,OAAO,EAAC;AACJD,QAAAA,KAAK,EAAE,oDADH;AAEJX,QAAAA,OAAO,EAAE;AAFL;AAFE,KAAD,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAeMtB,MAAM,CAACO,WAAP,iBAAsB;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCP,MAAM,CAACO,WAAP,CAAmBe,OAA3D,CAf5B,CADJ,CAFJ,CAnBJ,eA0CI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,SAAS,EAAG,SAAQtB,MAAM,CAACQ,QAAP,IAAmB,WAAY,EADnD;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,WAAW,EAAC,UAHZ;AAIA,IAAA,IAAI,EAAC,UAJL;AAKA,IAAA,GAAG,EAAGV,QAAQ,CAAC;AACXiC,MAAAA,QAAQ,EAAE,IADC;AAEXI,MAAAA,SAAS,EAAE;AACPF,QAAAA,KAAK,EAAE,CADA;AAEPX,QAAAA,OAAO,EAAE;AAFF;AAFA,KAAD,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYMtB,MAAM,CAACQ,QAAP,iBAAmB;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCR,MAAM,CAACQ,QAAP,CAAgBc,OAAxD,CAZzB,CAFJ,CA1CJ,eA4DI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,SAAS,EAAG,SAAQtB,MAAM,CAACY,SAAP,IAAoB,WAAY,EADpD;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,WAAW,EAAC,kBAHZ;AAIA,IAAA,IAAI,EAAC,WAJL;AAKA,IAAA,GAAG,EAAGd,QAAQ,CAAC;AACXiC,MAAAA,QAAQ,EAAE,IADC;AAEXK,MAAAA,QAAQ,EAAGH,KAAD,IAAWA,KAAK,KAAKhC,KAAK,CAAC,UAAD;AAFzB,KAAD,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUMD,MAAM,CAACY,SAAP,iBAAoB;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAV1B,CAFJ,CA5DJ,eA4EI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,6BAAlB;AAAgD,IAAA,OAAO,EAAEb,YAAY,CAACK,QAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CA5EJ,eA+EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/EJ,eAgFI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,QAAQ,EAAKF,QAAD,GAAW,EAAX,GAAc,UAD1B;AAEA,IAAA,SAAS,EAAG,SAAQF,MAAM,CAACwB,IAAP,IAAe,WAAY,EAF/C;AAGA,IAAA,IAAI,EAAC,QAHL;AAIA,IAAA,WAAW,EAAC,qBAJZ;AAKA,IAAA,IAAI,EAAC,MALL;AAMA,IAAA,GAAG,EAAG1B,QAAQ,CAAC;AACXkC,MAAAA,SAAS,EAAE;AACPC,QAAAA,KAAK,EAAE,CADA;AAEPX,QAAAA,OAAO,EAAE;AAFF;AADA,KAAD,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYMtB,MAAM,CAACwB,IAAP,iBAAe;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCxB,MAAM,CAACwB,IAAP,CAAYF,OAApD,CAZrB,CAFJ,CAhFJ,eAkGI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,6BAAlB;AAAgD,IAAA,OAAO,EAAEvB,YAAY,CAACwB,SAAD,CAArE;AAAkF,IAAA,QAAQ,EAAKrB,QAAD,GAAW,EAAX,GAAc,UAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAlGJ,CADJ,CAFJ,CADJ;AA6GH","sourcesContent":["import React, {useState} from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport decode from 'jwt-decode';\r\nimport Header from 'components/Header';\r\n\r\nexport default function SignUp(props) {\r\n    const user = global.auth.getUser();\r\n\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n\r\n    var [codeSent,setCodeSent] = useState(false);\r\n    // Get name, phone number, and password that user input in the form\r\n    const onSubmit = data => {    \r\n            const { nickname, phoneNumber, password } = data;\r\n            // post to server side for register\r\n            // api/users/register'\r\n            axios.post('api/users/register', { name: nickname, phone: phoneNumber, password: password, password2:password})\r\n            .then(res=>{console.log('res=>',res);\r\n                toast.success('Sent verification code');\r\n                setCodeSent(true);\r\n            })\r\n            .catch((err)=>toast.error(err.response.data.message));\r\n\r\n    };\r\n\r\n    // Get phone number, and verification code that user input in the form\r\n    const onSubmit2 = async(data) => {    \r\n        try {\r\n            const { phoneNumber, code } = data;\r\n            // post to server side for register\r\n            // api/users/register2\r\n            const res = await axios.post('api/users/register2', { phone: phoneNumber,code });\r\n            // receive a jwtoken from server side if successful\r\n            const jwToken = res.data.token.replace('Bearer ','');\r\n            console.log(decode(jwToken));\r\n            // store the token locally\r\n            global.auth.setToken(jwToken); \r\n            // route to the home page \r\n            props.history.push('/');\r\n            toast.success(\"Sign up successfully!\");\r\n        } catch (error) {\r\n            const message = error.response.data.message;\r\n            toast.error(message);\r\n        }\r\n};\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Header user={user} />\r\n            <div className=\"login_wrapper\">\r\n                <form className=\"box login_box\" >\r\n                    <div className=\"field\">\r\n                        <label className=\"label\">Name</label>\r\n                        <div className=\"control\">\r\n                            <input \r\n                            className={`input ${errors.nickname && 'is-danger'}`}  \r\n                            type=\"text\" \r\n                            placeholder=\"Nickname\" \r\n                            name='nickname'     \r\n                            ref={ register({       \r\n                                required: true,\r\n                                maxLength: {\r\n                                    value: 10,\r\n                                    message: 'cannot be more than 10 digits'\r\n                                }}) }  />   \r\n                            { errors.nickname && <p className=\"helper has-text-danger\">{ errors.nickname.message }</p> }  \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label className=\"label\">Phone Number</label>             \r\n                        <div class=\"field-body\">\r\n                            <div class=\"field is-expanded\">\r\n                                <div class=\"field has-addons\">\r\n                                    <p class=\"button is-static\">+1</p>\r\n                                    <input \r\n                                    type=\"text\" \r\n                                    className={`input ${errors.phoneNumber && 'is-danger'}`}\r\n                                    placeholder=\"Phone number\" \r\n                                    name=\"phoneNumber\"\r\n                                    ref={register({\r\n                                        required: true,\r\n                                        pattern:{\r\n                                            value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\r\n                                            message: \"invalid phone number\"\r\n                                    }})} />  \r\n                                </div>\r\n                                { errors.phoneNumber && <p className=\"helper has-text-danger\">{ errors.phoneNumber.message }</p >}\r\n                            </div>\r\n                        </div>                        \r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label className=\"label\">Password</label>\r\n                        <div className=\"control\">\r\n                            <input \r\n                            className={`input ${errors.password && 'is-danger'}`}\r\n                            type=\"password\" \r\n                            placeholder=\"Password\" \r\n                            name='password'     \r\n                            ref={ register({ \r\n                                required: true,\r\n                                minLength: {\r\n                                    value: 6,\r\n                                    message: 'cannot be less than 6 digits'\r\n                                }}) } />\r\n                            { errors.password && <p className=\"helper has-text-danger\">{ errors.password.message }</p> } \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label className=\"label\">Confirm Password</label>\r\n                        <div className=\"control\">\r\n                            <input \r\n                            className={`input ${errors.password2 && 'is-danger'}`}  \r\n                            type=\"password\" \r\n                            placeholder=\"Confirm Password\" \r\n                            name='password2'     \r\n                            ref={ register({       \r\n                                required: true,\r\n                                validate: (value) => value === watch('password')\r\n                                }) }  />   \r\n                            { errors.password2 && <p className=\"helper has-text-danger\">must match the qrevious entry</p> }  \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"control\">\r\n                        <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit)}>Get Authentication Code</button>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"field\">\r\n                        <label className=\"label\">Authentication Code</label>\r\n                        <div className=\"control\">\r\n                            <input \r\n                            disabled = {(codeSent)?\"\":\"disabled\"}\r\n                            className={`input ${errors.code && 'is-danger'}`}  \r\n                            type=\"number\" \r\n                            placeholder=\"Authentication Code\" \r\n                            name='code'     \r\n                            ref={ register({       \r\n                                maxLength: {\r\n                                    value: 6,\r\n                                    message: 'should be 6 digits'\r\n                                }}) }  />   \r\n                            { errors.code && <p className=\"helper has-text-danger\">{ errors.code.message }</p> }  \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"control\">\r\n                        <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit2)} disabled = {(codeSent)?\"\":\"disabled\"}>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>  \r\n        </React.Fragment>    \r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}