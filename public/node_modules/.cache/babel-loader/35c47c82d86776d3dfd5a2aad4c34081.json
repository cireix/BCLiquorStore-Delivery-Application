{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/CMPT276/CMPT276/public/src/pages/SignUp.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport decode from 'jwt-decode';\nimport { withRouter } from \"react-router-dom\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const {\n      register,\n      handleSubmit,\n      errors,\n      watch\n    } = useForm();\n    this.setState({\n      register: register,\n      handleSubmit: handleSubmit,\n      errors: {\n        nickname: \"eric\"\n      },\n      watch: watch\n    });\n  } // Get name, phone number, and password that user input in the form\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"box login_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${this.state.errors.nickname && 'is-danger'}`,\n      type: \"text\",\n      placeholder: \"Nickname\",\n      name: \"nickname\",\n      ref: this.state.register({\n        required: true,\n        maxLength: {\n          value: 10,\n          message: 'cannot be more than 10 digits'\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }), this.state.errors.nickname && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"helper has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 61\n      }\n    }, this.state.errors.nickname.message))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"field-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"field is-expanded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"field has-addons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      class: \"button is-static\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, \"+1\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: `input ${this.state.errors.phoneNumber && 'is-danger'}`,\n      placeholder: \"Phone number\",\n      name: \"phoneNumber\",\n      ref: this.state.register({\n        required: true,\n        pattern: {\n          value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n          message: \"invalid phone number\"\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    })), this.state.errors.phoneNumber && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"helper has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 68\n      }\n    }, this.state.errors.phoneNumber.message)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${this.state.errors.password && 'is-danger'}`,\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      ref: this.state.register({\n        required: true,\n        minLength: {\n          value: 6,\n          message: 'cannot be less than 6 digits'\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }), this.state.errors.password && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"helper has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 61\n      }\n    }, this.state.errors.password.message))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${this.state.errors.password2 && 'is-danger'}`,\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"password2\",\n      ref: this.state.register({\n        required: true,\n        validate: value => value === this.state.watch('password')\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }), this.state.errors.password2 && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"helper has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 62\n      }\n    }, \"must match the qrevious entry\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button is-link login_button\",\n      onClick: this.state.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, \"Get Authentication Code\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, \"Authentication Code\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${this.state.errors.code && 'is-danger'}`,\n      type: \"number\",\n      placeholder: \"Authentication Code\",\n      name: \"code\",\n      ref: this.state.register({\n        maxLength: {\n          value: 6,\n          message: 'should be 6 digits'\n        }\n      }),\n      disabled: this.state.codeSent ? \"\" : \"disabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }), this.state.errors.code && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"helper has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 57\n      }\n    }, this.state.errors.code.message))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button is-link login_button\",\n      onClick: this.state.handleSubmit(this.onSubmit2),\n      disabled: this.state.codeSent ? \"\" : \"disabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nconst SignUpWithRouter = withRouter(SignUp);\nexport default (() => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n  return /*#__PURE__*/React.createElement(SignUp, {\n    register: register,\n    handleSubmit: handleSubmit,\n    errors: errors,\n    watch: watch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  });\n}); // export default SignUpWithRouter;","map":{"version":3,"sources":["/home/eric/Desktop/CMPT276/CMPT276/public/src/pages/SignUp.js"],"names":["React","useForm","axios","toast","decode","withRouter","SignUp","Component","constructor","props","state","componentDidMount","register","handleSubmit","errors","watch","setState","nickname","render","required","maxLength","value","message","phoneNumber","pattern","password","minLength","password2","validate","onSubmit","code","codeSent","onSubmit2","SignUpWithRouter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKC,KAAL,GAAa,EAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,YAAZ;AAA0BC,MAAAA,MAA1B;AAAkCC,MAAAA;AAAlC,QAA4Cd,OAAO,EAAzD;AACA,SAAKe,QAAL,CAAc;AACVJ,MAAAA,QAAQ,EAAEA,QADA;AAEVC,MAAAA,YAAY,EAAEA,YAFJ;AAGVC,MAAAA,MAAM,EAAE;AACJG,QAAAA,QAAQ,EAAE;AADN,OAHE;AAMVF,MAAAA,KAAK,EAAEA;AANG,KAAd;AAQH,GAhB+B,CAmBhC;;;AAmCAG,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACA,MAAA,SAAS,EAAG,SAAQ,KAAKR,KAAL,CAAWI,MAAX,CAAkBG,QAAlB,IAA8B,WAAY,EAD9D;AAEA,MAAA,IAAI,EAAC,MAFL;AAGA,MAAA,WAAW,EAAC,UAHZ;AAIA,MAAA,IAAI,EAAC,UAJL;AAKA,MAAA,GAAG,EAAG,KAAKP,KAAL,CAAWE,QAAX,CAAoB;AACtBO,QAAAA,QAAQ,EAAE,IADY;AAEtBC,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE,EADA;AAEPC,UAAAA,OAAO,EAAE;AAFF;AAFW,OAApB,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAYM,KAAKZ,KAAL,CAAWI,MAAX,CAAkBG,QAAlB,iBAA8B;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC,KAAKP,KAAL,CAAWI,MAAX,CAAkBG,QAAlB,CAA2BK,OAAnE,CAZpC,CAFJ,CADJ,eAkBI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,KAAK,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,SAAS,EAAG,SAAQ,KAAKZ,KAAL,CAAWI,MAAX,CAAkBS,WAAlB,IAAiC,WAAY,EAFjE;AAGA,MAAA,WAAW,EAAC,cAHZ;AAIA,MAAA,IAAI,EAAC,aAJL;AAKA,MAAA,GAAG,EAAE,KAAKb,KAAL,CAAWE,QAAX,CAAoB;AACrBO,QAAAA,QAAQ,EAAE,IADW;AAErBK,QAAAA,OAAO,EAAC;AACJH,UAAAA,KAAK,EAAE,oDADH;AAEJC,UAAAA,OAAO,EAAE;AAFL;AAFa,OAApB,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAeM,KAAKZ,KAAL,CAAWI,MAAX,CAAkBS,WAAlB,iBAAiC;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC,KAAKb,KAAL,CAAWI,MAAX,CAAkBS,WAAlB,CAA8BD,OAAtE,CAfvC,CADJ,CAFJ,CAlBJ,eAyCI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACA,MAAA,SAAS,EAAG,SAAQ,KAAKZ,KAAL,CAAWI,MAAX,CAAkBW,QAAlB,IAA8B,WAAY,EAD9D;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,WAAW,EAAC,UAHZ;AAIA,MAAA,IAAI,EAAC,UAJL;AAKA,MAAA,GAAG,EAAG,KAAKf,KAAL,CAAWE,QAAX,CAAoB;AACtBO,QAAAA,QAAQ,EAAE,IADY;AAEtBO,QAAAA,SAAS,EAAE;AACPL,UAAAA,KAAK,EAAE,CADA;AAEPC,UAAAA,OAAO,EAAE;AAFF;AAFW,OAApB,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAYM,KAAKZ,KAAL,CAAWI,MAAX,CAAkBW,QAAlB,iBAA8B;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC,KAAKf,KAAL,CAAWI,MAAX,CAAkBW,QAAlB,CAA2BH,OAAnE,CAZpC,CAFJ,CAzCJ,eA2DI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACA,MAAA,SAAS,EAAG,SAAQ,KAAKZ,KAAL,CAAWI,MAAX,CAAkBa,SAAlB,IAA+B,WAAY,EAD/D;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,WAAW,EAAC,kBAHZ;AAIA,MAAA,IAAI,EAAC,WAJL;AAKA,MAAA,GAAG,EAAG,KAAKjB,KAAL,CAAWE,QAAX,CAAoB;AACtBO,QAAAA,QAAQ,EAAE,IADY;AAEtBS,QAAAA,QAAQ,EAAGP,KAAD,IAAWA,KAAK,KAAK,KAAKX,KAAL,CAAWK,KAAX,CAAiB,UAAjB;AAFT,OAApB,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUM,KAAKL,KAAL,CAAWI,MAAX,CAAkBa,SAAlB,iBAA+B;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAVrC,CAFJ,CA3DJ,eA2EI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAgD,MAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWG,YAAX,CAAwB,KAAKgB,QAA7B,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CA3EJ,eA8EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9EJ,eA+EI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACA,MAAA,SAAS,EAAG,SAAQ,KAAKnB,KAAL,CAAWI,MAAX,CAAkBgB,IAAlB,IAA0B,WAAY,EAD1D;AAEA,MAAA,IAAI,EAAC,QAFL;AAGA,MAAA,WAAW,EAAC,qBAHZ;AAIA,MAAA,IAAI,EAAC,MAJL;AAKA,MAAA,GAAG,EAAG,KAAKpB,KAAL,CAAWE,QAAX,CAAoB;AACtBQ,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE,CADA;AAEPC,UAAAA,OAAO,EAAE;AAFF;AADW,OAApB,CALN;AAUA,MAAA,QAAQ,EAAK,KAAKZ,KAAL,CAAWqB,QAAZ,GAAsB,EAAtB,GAAyB,UAVrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAaM,KAAKrB,KAAL,CAAWI,MAAX,CAAkBgB,IAAlB,iBAA0B;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC,KAAKpB,KAAL,CAAWI,MAAX,CAAkBgB,IAAlB,CAAuBR,OAA/D,CAbhC,CAFJ,CA/EJ,eAkGI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAgD,MAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWG,YAAX,CAAwB,KAAKmB,SAA7B,CAAzD;AAAkG,MAAA,QAAQ,EAAK,KAAKtB,KAAL,CAAWqB,QAAZ,GAAsB,EAAtB,GAAyB,UAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAlGJ,CADJ,CADJ;AA0GH;;AAlK+B;;AAoKpC,MAAME,gBAAgB,GAAG5B,UAAU,CAACC,MAAD,CAAnC;AACA,gBAAe,MAAM;AACjB,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAA4Cd,OAAO,EAAzD;AACA,sBAEI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEW,QAAlB;AAA4B,IAAA,YAAY,EAAEC,YAA1C;AAAwD,IAAA,MAAM,EAAEC,MAAhE;AAAwE,IAAA,KAAK,EAAEC,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAIH,CAND,E,CAOA","sourcesContent":["import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport decode from 'jwt-decode';\nimport {withRouter} from \"react-router-dom\";\n\nclass SignUp extends React.Component{\n    constructor(props) {\n        this.state = {\n\n        }\n    }\n    componentDidMount(){\n        const { register, handleSubmit, errors, watch } = useForm();\n        this.setState({\n            register: register,\n            handleSubmit: handleSubmit,\n            errors: {\n                nickname: \"eric\"\n            },\n            watch: watch\n        })\n    }\n    \n    \n    // Get name, phone number, and password that user input in the form\n    onSubmit = data => {    \n            const { nickname, phoneNumber, password } = data;\n            // post to server side for register   \n            // api/users/register'     \n            axios.post('api/users/register', { name: nickname, phone: phoneNumber, password: password, password2:password})\n            .then(res=>{console.log('res=>',res); \n                toast.success('Sent verification code');\n                this.setState({\n                    codeSent:true\n                })\n            })\n            .catch((err)=>toast.error(err.response.data.message));\n    };\n\n    // Get phone number, and verification code that user input in the form\n    onSubmit2 = async(data) => {    \n        try {\n            const { phoneNumber, code } = data;\n            // post to server side for register\n            // api/users/register2\n            const res = await axios.post('api/users/register2', { phone: phoneNumber,code });  \n            // receive a jwtoken from server side if successful\n            const jwToken = res.data.token.replace('Bearer ','');\n            console.log(decode(jwToken));\n            // store the token locally\n            global.auth.setToken(jwToken); \n            // route to the home page \n            this.props.history.push('/');\n            toast.success(\"Sign up successfully!\");\n        } catch (error) {\n            const message = error.response.data.message;\n            toast.error(message);\n        }\n    }\n    render() {\n        \n        return(\n            <div className=\"login_wrapper\">\n                <form className=\"box login_box\" >\n                    <div className=\"field\">\n                        <label className=\"label\">Name</label>\n                        <div className=\"control\">\n                            <input \n                            className={`input ${this.state.errors.nickname && 'is-danger'}`}  \n                            type=\"text\" \n                            placeholder=\"Nickname\" \n                            name='nickname'     \n                            ref={ this.state.register({       \n                                required: true,\n                                maxLength: {\n                                    value: 10,\n                                    message: 'cannot be more than 10 digits'\n                                }}) }  />   \n                            { this.state.errors.nickname && <p className=\"helper has-text-danger\">{ this.state.errors.nickname.message }</p> }  \n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <label className=\"label\">Phone Number</label>             \n                        <div class=\"field-body\">\n                            <div class=\"field is-expanded\">\n                                <div class=\"field has-addons\">\n                                    <p class=\"button is-static\">+1</p>\n                                    <input \n                                    type=\"text\" \n                                    className={`input ${this.state.errors.phoneNumber && 'is-danger'}`}\n                                    placeholder=\"Phone number\" \n                                    name=\"phoneNumber\"\n                                    ref={this.state.register({\n                                        required: true,\n                                        pattern:{\n                                            value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n                                            message: \"invalid phone number\"\n                                    }})} />  \n                                </div>\n                                { this.state.errors.phoneNumber && <p className=\"helper has-text-danger\">{ this.state.errors.phoneNumber.message }</p >}\n                            </div>\n                        </div>                        \n                    </div>\n\n                    <div className=\"field\">\n                        <label className=\"label\">Password</label>\n                        <div className=\"control\">\n                            <input \n                            className={`input ${this.state.errors.password && 'is-danger'}`}\n                            type=\"password\" \n                            placeholder=\"Password\" \n                            name='password'     \n                            ref={ this.state.register({ \n                                required: true,\n                                minLength: {\n                                    value: 6,\n                                    message: 'cannot be less than 6 digits'\n                                }}) } />\n                            { this.state.errors.password && <p className=\"helper has-text-danger\">{ this.state.errors.password.message }</p> } \n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <label className=\"label\">Confirm Password</label>\n                        <div className=\"control\">\n                            <input \n                            className={`input ${this.state.errors.password2 && 'is-danger'}`}  \n                            type=\"password\" \n                            placeholder=\"Confirm Password\" \n                            name='password2'     \n                            ref={ this.state.register({       \n                                required: true,\n                                validate: (value) => value === this.state.watch('password')\n                                }) }  />   \n                            { this.state.errors.password2 && <p className=\"helper has-text-danger\">must match the qrevious entry</p> }  \n                        </div>\n                    </div>\n\n                    <div className=\"control\">\n                        <button className=\"button is-link login_button\" onClick={this.state.handleSubmit(this.onSubmit)}>Get Authentication Code</button>\n                    </div>\n                    <br />\n                    <div className=\"field\">\n                        <label className=\"label\">Authentication Code</label>\n                        <div className=\"control\">\n                            <input \n                            className={`input ${this.state.errors.code && 'is-danger'}`}  \n                            type=\"number\" \n                            placeholder=\"Authentication Code\" \n                            name='code'     \n                            ref={ this.state.register({       \n                                maxLength: {\n                                    value: 6,\n                                    message: 'should be 6 digits'\n                                }}) } \n                            disabled = {(this.state.codeSent)?\"\":\"disabled\"} \n                            />   \n                            { this.state.errors.code && <p className=\"helper has-text-danger\">{ this.state.errors.code.message }</p> }  \n                        </div>\n                    </div>\n\n                    <div className=\"control\">\n                        <button className=\"button is-link login_button\" onClick={this.state.handleSubmit(this.onSubmit2)} disabled = {(this.state.codeSent)?\"\":\"disabled\"} >Submit</button>\n                    </div>\n                </form>\n            </div>      \n        );\n    }\n}\nconst SignUpWithRouter = withRouter(SignUp);\nexport default () => {\n    const { register, handleSubmit, errors, watch } = useForm();\n    return (\n        \n        <SignUp register={register} handleSubmit={handleSubmit} errors={errors} watch={watch}/>\n    )\n}\n// export default SignUpWithRouter;"]},"metadata":{},"sourceType":"module"}