{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean\\\\nodeProject\\\\CMPT276\\\\public\\\\src\\\\pages\\\\SignUp.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'commons/axios';\nimport { toast } from 'react-toastify';\nimport decode from 'jwt-decode';\nexport default function Login(props) {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n\n  const onSubmit = data => {\n    const {\n      nickname,\n      phoneNumber,\n      password\n    } = data; // post to server side for register   \n    // api/users/register'     \n\n    axios.post('http://localhost:5000/api/users/register', {\n      name: nickname,\n      phone: phoneNumber,\n      password: password,\n      password2: password,\n      type: 1\n    }).then(res => {\n      console.log('res=>', res);\n    }).catch(err => console.log(err));\n  };\n\n  const onSubmit2 = async data => {\n    try {\n      const {\n        phoneNumber,\n        code\n      } = data; // post to server side for register\n      // api/users/register2\n\n      const res = await axios.post('http://localhost:5000/api/users/register2', {\n        phone: phoneNumber,\n        code\n      }); // receive a jwtoken from server side if successful\n\n      const jwToken = res.data.token.replace('Bearer ', '');\n      console.log(decode(jwToken)); // store the token locally\n\n      global.auth.setToken(jwToken); // route to the home page \n\n      props.history.push('/');\n      toast.success(\"Sign up successfully!\");\n    } catch (error) {\n      const message = error.response.data.message;\n      toast.error(message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"box login_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.nickname && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Nickname\",\n    name: \"nickname\",\n    ref: register({\n      required: true,\n      maxLength: {\n        value: 10,\n        message: 'cannot be more than 10 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }), errors.nickname && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 46\n    }\n  }, errors.nickname.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field is-expanded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field has-addons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"button is-static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, \"+1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `input ${errors.phoneNumber && 'is-danger'}`,\n    placeholder: \"Phone number\",\n    name: \"phoneNumber\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n        message: \"invalid phone number\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  })), errors.phoneNumber && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 53\n    }\n  }, errors.phoneNumber.message)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.password && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: true,\n      minLength: {\n        value: 6,\n        message: 'cannot be less than 6 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 46\n    }\n  }, errors.password.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.password2 && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    ref: register({\n      required: true,\n      validate: value => value === watch('password')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }), errors.password2 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 47\n    }\n  }, \"must match the qrevious entry\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    onClick: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Get Authentication Code\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Authentication Code\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.code && 'is-danger'}`,\n    type: \"number\",\n    placeholder: \"Authentication Code\",\n    name: \"code\",\n    ref: register({\n      maxLength: {\n        value: 6,\n        message: 'should be 6 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }), errors.code && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 42\n    }\n  }, errors.code.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    onClick: handleSubmit(onSubmit2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["C:/Users/Sean/nodeProject/CMPT276/public/src/pages/SignUp.js"],"names":["React","useForm","axios","toast","decode","Login","props","register","handleSubmit","errors","watch","onSubmit","data","nickname","phoneNumber","password","post","name","phone","password2","type","then","res","console","log","catch","err","onSubmit2","code","jwToken","token","replace","global","auth","setToken","history","push","success","error","message","response","required","maxLength","value","pattern","minLength","validate"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport axios from 'commons/axios';\r\nimport { toast } from 'react-toastify';\r\nimport decode from 'jwt-decode';\r\n\r\nexport default function Login(props) {\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n    \r\n    const onSubmit = data => {    \r\n\r\n            const { nickname, phoneNumber, password } = data;\r\n            // post to server side for register   \r\n            // api/users/register'     \r\n            axios.post('http://localhost:5000/api/users/register', { name: nickname, phone: phoneNumber, password: password, password2:password,type: 1 }).then(res=>{console.log('res=>',res); })\r\n            .catch((err)=>console.log(err));\r\n\r\n    };\r\n\r\n    const onSubmit2 = async(data) => {    \r\n        try {\r\n            const { phoneNumber, code } = data;\r\n            // post to server side for register\r\n            // api/users/register2\r\n            const res = await axios.post('http://localhost:5000/api/users/register2', { phone: phoneNumber,code });  \r\n            // receive a jwtoken from server side if successful\r\n            const jwToken = res.data.token.replace('Bearer ','');\r\n            console.log(decode(jwToken));\r\n            // store the token locally\r\n            global.auth.setToken(jwToken); \r\n            // route to the home page \r\n            props.history.push('/');\r\n            toast.success(\"Sign up successfully!\");\r\n        } catch (error) {\r\n            const message = error.response.data.message;\r\n            toast.error(message);\r\n        }\r\n};\r\n\r\n\r\n    return(\r\n        <div className=\"login_wrapper\">\r\n            <form className=\"box login_box\" >\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Name</label>\r\n                    <div className=\"control\">\r\n                        <input \r\n                        className={`input ${errors.nickname && 'is-danger'}`}  \r\n                        type=\"text\" \r\n                        placeholder=\"Nickname\" \r\n                        name='nickname'     \r\n                        ref={ register({       \r\n                            required: true,\r\n                            maxLength: {\r\n                                value: 10,\r\n                                message: 'cannot be more than 10 digits'\r\n                            }}) }  />   \r\n                        { errors.nickname && <p className=\"helper has-text-danger\">{ errors.nickname.message }</p> }  \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Phone Number</label>             \r\n                    <div class=\"field-body\">\r\n                        <div class=\"field is-expanded\">\r\n                            <div class=\"field has-addons\">\r\n                                <p class=\"button is-static\">+1</p>\r\n                                <input \r\n                                type=\"text\" \r\n                                className={`input ${errors.phoneNumber && 'is-danger'}`}\r\n                                placeholder=\"Phone number\" \r\n                                name=\"phoneNumber\"\r\n                                ref={register({\r\n                                    required: true,\r\n                                    pattern:{\r\n                                        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\r\n                                        message: \"invalid phone number\"\r\n                                }})} />  \r\n                            </div>\r\n                            { errors.phoneNumber && <p className=\"helper has-text-danger\">{ errors.phoneNumber.message }</p >}\r\n                        </div>\r\n                    </div>                        \r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Password</label>\r\n                    <div className=\"control\">\r\n                        <input \r\n                        className={`input ${errors.password && 'is-danger'}`}\r\n                        type=\"text\" \r\n                        placeholder=\"Password\" \r\n                        name='password'     \r\n                        ref={ register({ \r\n                            required: true,\r\n                            minLength: {\r\n                                value: 6,\r\n                                message: 'cannot be less than 6 digits'\r\n                            }}) } />\r\n                        { errors.password && <p className=\"helper has-text-danger\">{ errors.password.message }</p> } \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Confirm Password</label>\r\n                    <div className=\"control\">\r\n                        <input \r\n                        className={`input ${errors.password2 && 'is-danger'}`}  \r\n                        type=\"text\" \r\n                        placeholder=\"Confirm Password\" \r\n                        name='password2'     \r\n                        ref={ register({       \r\n                            required: true,\r\n                            validate: (value) => value === watch('password')\r\n                            }) }  />   \r\n                        { errors.password2 && <p className=\"helper has-text-danger\">must match the qrevious entry</p> }  \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"control\">\r\n                    <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit)}>Get Authentication Code</button>\r\n                </div>\r\n                <br />\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Authentication Code</label>\r\n                    <div className=\"control\">\r\n                        <input \r\n                        className={`input ${errors.code && 'is-danger'}`}  \r\n                        type=\"number\" \r\n                        placeholder=\"Authentication Code\" \r\n                        name='code'     \r\n                        ref={ register({       \r\n                            maxLength: {\r\n                                value: 6,\r\n                                message: 'should be 6 digits'\r\n                            }}) }  />   \r\n                        { errors.code && <p className=\"helper has-text-danger\">{ errors.code.message }</p> }  \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"control\">\r\n                    <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit2)}>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>      \r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}