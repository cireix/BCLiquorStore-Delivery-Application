{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/CMPT276/CMPT276/public/src/pages/SignUp.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport decode from 'jwt-decode';\nexport default function SignUp(props) {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n  var [codeSent, setCodeSent] = useState(false);\n  var [codeDelay, setCodeDelay] = useState(60);\n  var countDown;\n  const defaultCodeText = \"Get Authentication Code\";\n  var [codeText, setCodeText] = useState(defaultCodeText); // Get name, phone number, and password that user input in the form\n\n  const onSubmit = data => {\n    const {\n      nickname,\n      phoneNumber,\n      password\n    } = data; // post to server side for register\n    // api/users/register'\n\n    axios.post('api/users/register', {\n      name: nickname,\n      phone: phoneNumber,\n      password: password,\n      password2: password\n    }).then(res => {\n      console.log('res=>', res);\n      toast.success('Sent verification code');\n      setCodeSent(true);\n      setCodeDelay(60);\n      countDown = setInterval(function () {\n        console.log(codeDelay);\n        setCodeDelay(codeDelay - 1);\n        setCodeText(defaultCodeText + \" (\" + codeDelay + \")\");\n\n        if (codeDelay == 0) {\n          setCodeText(defaultCodeText);\n          clearInterval(countDown);\n        }\n      }, 1000);\n    }).catch(err => toast.error(err.response.data.message));\n  }; // Get phone number, and verification code that user input in the form\n\n\n  const onSubmit2 = async data => {\n    try {\n      const {\n        phoneNumber,\n        code\n      } = data; // post to server side for register\n      // api/users/register2\n\n      const res = await axios.post('api/users/register2', {\n        phone: phoneNumber,\n        code\n      }); // receive a jwtoken from server side if successful\n\n      const jwToken = res.data.token.replace('Bearer ', '');\n      console.log(decode(jwToken)); // store the token locally\n\n      global.auth.setToken(jwToken); // route to the home page \n\n      props.history.push('/');\n      toast.success(\"Sign up successfully!\");\n    } catch (error) {\n      const message = error.response.data.message;\n      toast.error(message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"box login_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.nickname && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Nickname\",\n    name: \"nickname\",\n    ref: register({\n      required: true,\n      maxLength: {\n        value: 10,\n        message: 'cannot be more than 10 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), errors.nickname && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 46\n    }\n  }, errors.nickname.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field is-expanded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"field has-addons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"button is-static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, \"+1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `input ${errors.phoneNumber && 'is-danger'}`,\n    placeholder: \"Phone number\",\n    name: \"phoneNumber\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n        message: \"invalid phone number\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  })), errors.phoneNumber && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 53\n    }\n  }, errors.phoneNumber.message)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.password && 'is-danger'}`,\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: true,\n      minLength: {\n        value: 6,\n        message: 'cannot be less than 6 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 46\n    }\n  }, errors.password.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.password2 && 'is-danger'}`,\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\",\n    ref: register({\n      required: true,\n      validate: value => value === watch('password')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }), errors.password2 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 47\n    }\n  }, \"must match the previous entry\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    onClick: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, codeText)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Authentication Code\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    disabled: codeSent ? \"\" : \"disabled\",\n    className: `input ${errors.code && 'is-danger'}`,\n    type: \"number\",\n    placeholder: \"Authentication Code\",\n    name: \"code\",\n    ref: register({\n      maxLength: {\n        value: 6,\n        message: 'should be 6 digits'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }), errors.code && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 42\n    }\n  }, errors.code.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-link login_button\",\n    onClick: handleSubmit(onSubmit2),\n    disabled: codeSent ? \"\" : \"disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/home/eric/Desktop/CMPT276/CMPT276/public/src/pages/SignUp.js"],"names":["React","useState","useForm","axios","toast","decode","SignUp","props","register","handleSubmit","errors","watch","codeSent","setCodeSent","codeDelay","setCodeDelay","countDown","defaultCodeText","codeText","setCodeText","onSubmit","data","nickname","phoneNumber","password","post","name","phone","password2","then","res","console","log","success","setInterval","clearInterval","catch","err","error","response","message","onSubmit2","code","jwToken","token","replace","global","auth","setToken","history","push","required","maxLength","value","pattern","minLength","validate"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport decode from 'jwt-decode';\n\nexport default function SignUp(props) {\n    const { register, handleSubmit, errors, watch } = useForm();\n    var [codeSent,setCodeSent] = useState(false);\n    var [codeDelay,setCodeDelay] = useState(60);\n    var countDown;\n    const defaultCodeText = \"Get Authentication Code\";\n    var [codeText, setCodeText] = useState(defaultCodeText)\n    \n    // Get name, phone number, and password that user input in the form\n    const onSubmit = data => {    \n            const { nickname, phoneNumber, password } = data;\n            // post to server side for register\n            // api/users/register'\n            axios.post('api/users/register', { name: nickname, phone: phoneNumber, password: password, password2:password})\n            .then(res=>{console.log('res=>',res);\n                toast.success('Sent verification code');\n                setCodeSent(true);\n                setCodeDelay(60);\n                countDown = setInterval(function(){\n                    console.log(codeDelay)\n                    setCodeDelay(codeDelay - 1)\n                    setCodeText(defaultCodeText + \" (\"+codeDelay+\")\")\n                    if(codeDelay == 0) {\n                        setCodeText(defaultCodeText);\n                        clearInterval(countDown);\n                    }\n                },1000)\n            })\n            .catch((err)=>toast.error(err.response.data.message));\n    };\n    \n\n    // Get phone number, and verification code that user input in the form\n    const onSubmit2 = async(data) => {    \n        try {\n            const { phoneNumber, code } = data;\n            // post to server side for register\n            // api/users/register2\n            const res = await axios.post('api/users/register2', { phone: phoneNumber,code });\n            // receive a jwtoken from server side if successful\n            const jwToken = res.data.token.replace('Bearer ','');\n            console.log(decode(jwToken));\n            // store the token locally\n            global.auth.setToken(jwToken); \n            // route to the home page \n            props.history.push('/');\n            toast.success(\"Sign up successfully!\");\n        } catch (error) {\n            const message = error.response.data.message;\n            toast.error(message);\n        }\n};\n\n\n    return(\n        <div className=\"login_wrapper\">\n            <form className=\"box login_box\" >\n                <div className=\"field\">\n                    <label className=\"label\">Name</label>\n                    <div className=\"control\">\n                        <input \n                        className={`input ${errors.nickname && 'is-danger'}`}  \n                        type=\"text\" \n                        placeholder=\"Nickname\" \n                        name='nickname'     \n                        ref={ register({       \n                            required: true,\n                            maxLength: {\n                                value: 10,\n                                message: 'cannot be more than 10 digits'\n                            }}) }  />   \n                        { errors.nickname && <p className=\"helper has-text-danger\">{ errors.nickname.message }</p> }  \n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Phone Number</label>             \n                    <div class=\"field-body\">\n                        <div class=\"field is-expanded\">\n                            <div class=\"field has-addons\">\n                                <p class=\"button is-static\">+1</p>\n                                <input \n                                type=\"text\" \n                                className={`input ${errors.phoneNumber && 'is-danger'}`}\n                                placeholder=\"Phone number\" \n                                name=\"phoneNumber\"\n                                ref={register({\n                                    required: true,\n                                    pattern:{\n                                        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n                                        message: \"invalid phone number\"\n                                }})} />  \n                            </div>\n                            { errors.phoneNumber && <p className=\"helper has-text-danger\">{ errors.phoneNumber.message }</p >}\n                        </div>\n                    </div>                        \n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Password</label>\n                    <div className=\"control\">\n                        <input \n                        className={`input ${errors.password && 'is-danger'}`}\n                        type=\"password\" \n                        placeholder=\"Password\" \n                        name='password'     \n                        ref={ register({ \n                            required: true,\n                            minLength: {\n                                value: 6,\n                                message: 'cannot be less than 6 digits'\n                            }}) } />\n                        { errors.password && <p className=\"helper has-text-danger\">{ errors.password.message }</p> } \n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Confirm Password</label>\n                    <div className=\"control\">\n                        <input \n                        className={`input ${errors.password2 && 'is-danger'}`}  \n                        type=\"password\" \n                        placeholder=\"Confirm Password\" \n                        name='password2'     \n                        ref={ register({       \n                            required: true,\n                            validate: (value) => value === watch('password')\n                            }) }  />   \n                        { errors.password2 && <p className=\"helper has-text-danger\">must match the previous entry</p> }  \n                    </div>\n                </div>\n\n                <div className=\"control\">\n                    <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit)}>{codeText}</button>\n                </div>\n                <br />\n                <div className=\"field\">\n                    <label className=\"label\">Authentication Code</label>\n                    <div className=\"control\">\n                        <input \n                        disabled = {(codeSent)?\"\":\"disabled\"}\n                        className={`input ${errors.code && 'is-danger'}`}  \n                        type=\"number\" \n                        placeholder=\"Authentication Code\" \n                        name='code'     \n                        ref={ register({       \n                            maxLength: {\n                                value: 6,\n                                message: 'should be 6 digits'\n                            }}) }  />   \n                        { errors.code && <p className=\"helper has-text-danger\">{ errors.code.message }</p> }  \n                    </div>\n                </div>\n\n                <div className=\"control\">\n                    <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit2)} disabled = {(codeSent)?\"\":\"disabled\"}>Submit</button>\n                </div>\n            </form>\n        </div>      \n    );\n}\n"]},"metadata":{},"sourceType":"module"}