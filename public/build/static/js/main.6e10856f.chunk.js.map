{"version":3,"sources":["pages/App.js","components/UserProfile.js","pages/Login.js","pages/SignUp.js","pages/ResetPw.js","components/Panel.js","components/Header.js","components/ToolBox.js","components/Products.js","commons/auth.js","pages/ForgotPw.js","pages/AllUsers.js","Router.js","index.js","commons/axios.js"],"names":["App","props","user","global","auth","getUser","className","UserProfile","disabled","type","defaultValue","nickname","phoneNumber","onClick","logOut","close","Login","useForm","register","handleSubmit","errors","submitHnadler","data","a","password","axios","post","phone","res","jwToken","token","replace","console","log","decode","setToken","history","push","toast","success","error","action","onSubmit","class","placeholder","name","ref","required","pattern","value","message","minLength","to","watch","onSubmit2","code","maxLength","password2","validate","then","catch","err","ResetPw","submitHandler","veri_code","Panel","state","component","active","callback","open","options","_key","Date","getTime","_component","React","createElement","key","setState","true","false","this","Component","_div","document","body","appendChild","_panel","render","withRouter","toProfile","go","Fragment","ToolBox","Products","getToken","localStorage","getItem","isLogin","status","jwt","exp","now","isTokenExpired","setItem","removeItem","ForgotPw","AllUsers","get","getData","map","head","row","cell","Router","path","exact","SignUp","ReactDOM","getElementById","instance","_axios","create","baseURL","timeout"],"mappings":"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","file":"static/js/main.6e10856f.chunk.js","sourcesContent":["import React from 'react';\nimport Header from 'components/Header';    \nimport Products from 'components/Products';\n\nconst App = (props) => {\n    const user = global.auth.getUser();\n\n    return(\n        <div className=\"main\">\n            <Header user={user} />\n            <Products />\n        </div>\n    );\n\n}\n\nexport default App;","import React from 'react'\nimport { Link } from 'react-router-dom'; \n\nexport default function UserProfile(props) {\n\n    const logout = () => {\n        global.auth.logOut();\n        props.close(\"logout\");\n    }\n\n    return (\n        <div className=\"user-profile\">\n            <p className=\"title has-text-centered\">User Profile</p>\n            <fieldset disabled>\n                <div className=\"field\">\n                    <label className=\"label\">Name</label>\n                    <div className=\"control\">\n                        <input className=\"input\" type=\"text\" defaultValue={props.user.nickname} />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Phone Number</label>\n                    <div className=\"control\">\n                        <input className=\"input\" type=\"text\" defaultValue={props.user.phoneNumber} />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Type</label>\n                    <div className=\"control\">\n                        <input \n                        className=\"input\" \n                        type=\"text\" \n                        defaultValue={\n                            props.user.type === 1 ? \"Admin\" : \n                            [props.user.type === 2 ? \"Driver\" : \n                            \"General User\"]} />\n                    </div>\n                </div>\n            </fieldset>\n\n            <br />\n            <br />\n            <div className=\"field is-grouped is-grouped-centered\">\n                <div className=\"control\">\n                    <button className=\"button is-danger\" onClick={logout}>Logout</button>\n                </div>\n                { props.user.type === 1 ? (\n                    <div className=\"control\">\n                        <button className=\"button\" onClick={() => {props.close(\"allusers\");}}>All Users</button>\n                    </div>\n                ) : (null) }\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom'; \nimport axios from 'commons/axios';\nimport { toast } from 'react-toastify';\nimport decode from 'jwt-decode';\n\n\nexport default function Login(props)  {\n    const { register, handleSubmit, errors } = useForm();\n\n    const submitHnadler = async (data) => {\n        try {\n            //global.auth.logOut();\n            const { phoneNumber, password } = data;\n            // post to server side for login\n            const res = await axios.post('/api/users/login', { phone:phoneNumber, password: password });  \n            // receive a jwtoken from server side if success\n            const jwToken = res.data.token.replace('Bearer ','');\n            console.log(decode(jwToken));\n            // store the token locally\n            global.auth.setToken(jwToken);  \n            // route to the home page\n            props.history.push('/');  \n            toast.success(\"Login successful!\");\n        } catch (error) {\n            console.log(error);\n            toast.error('Invalid phone number or password');\n        }\n    };\n\n    return(\n        <div className=\"login_wrapper\">\n            <form action=\"\" className=\"box login_box\" onSubmit={ handleSubmit(submitHnadler) }>\n                <div className=\"field\">\n                    <label className=\"label\">Phone Number</label>             \n                    <div class=\"field-body\">\n                        <div class=\"field is-expanded\">\n                            <div class=\"field has-addons\">\n                                <p class=\"control\">\n                                <p class=\"button is-static\">+1</p>\n                                </p>\n                                <input \n                                type=\"text\" \n                                className={`input ${errors.phoneNumber && 'is-danger'}`}\n                                placeholder=\"Phone number\" \n                                name=\"phoneNumber\"\n                                ref={register({\n                                    required: true,\n                                    pattern:{\n                                        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n                                        message: \"invalid phone number\"\n                                }})} />  \n                            </div>\n                            { errors.phoneNumber && <p className=\"helper has-text-danger\">{ errors.phoneNumber.message }</p >}\n                        </div>\n                    </div>                        \n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Password</label>\n                    <div className=\"control\">\n                        <input \n                        type=\"text\" \n                        className={`input ${errors.password && 'is-danger'}`}\n                        placeholder=\"Password\" \n                        name=\"password\"\n                        ref={register({\n                            required: true,\n                            minLength: {\n                                value: 6,\n                                message: \"cannot be less then 6 digits\"\n                            }})}/>\n                        { errors.password && <p className=\"helper has-text-danger\">{ errors.password.message }</p >}\n                        <Link to='/forgotpw' className=\"has-text-danger forgotpw\">forgot password?</Link>\n                    </div>              \n                </div>\n                \n                   \n\n                <div className=\"control\">\n                    <button className=\"button is-link login_button\">Login</button>\n                </div>\n\n            </form>         \n        </div>\n    );\n}\n","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport axios from 'commons/axios';\nimport { toast } from 'react-toastify';\nimport decode from 'jwt-decode';\n\nexport default function Login(props) {\n    const { register, handleSubmit, errors, watch } = useForm();\n    \n    const onSubmit = data => {    \n\n            const { nickname, phoneNumber, password } = data;\n            // post to server side for register        \n            axios.post('/api/users/register', { name: nickname, phone: phoneNumber, password: password, password2:password,type: 1 }).then(res=>{console.log('res=>',res); })\n            .catch((err)=>console.log(err));\n\n    };\n\n    const onSubmit2 = async(data) => {    \n        try {\n            const { phoneNumber, code } = data;\n            // post to server side for register\n            const res = await axios.post('/api/users/register2', { phone: phoneNumber,code });  \n            // receive a jwtoken from server side if successful\n            const jwToken = res.data.token.replace('Bearer ','');\n            console.log(decode(jwToken));\n            // store the token locally\n            global.auth.setToken(jwToken); \n            // route to the home page \n            props.history.push('/');\n            toast.success(\"Sign up successfully!\");\n        } catch (error) {\n            console.log(error);\n            toast.error(\"This phone number already exists\");\n        }\n};\n\n\n    return(\n        <div className=\"login_wrapper\">\n            <form className=\"box login_box\" >\n                <div className=\"field\">\n                    <label className=\"label\">Name</label>\n                    <div className=\"control\">\n                        <input \n                        className={`input ${errors.nickname && 'is-danger'}`}  \n                        type=\"text\" \n                        placeholder=\"Nickname\" \n                        name='nickname'     \n                        ref={ register({       \n                            required: true,\n                            maxLength: {\n                                value: 10,\n                                message: 'cannot be more than 10 digits'\n                            }}) }  />   \n                        { errors.nickname && <p className=\"helper has-text-danger\">{ errors.nickname.message }</p> }  \n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Phone Number</label>             \n                    <div class=\"field-body\">\n                        <div class=\"field is-expanded\">\n                            <div class=\"field has-addons\">\n                                <p class=\"control\">\n                                <p class=\"button is-static\">+1</p>\n                                </p>\n                                <input \n                                type=\"text\" \n                                className={`input ${errors.phoneNumber && 'is-danger'}`}\n                                placeholder=\"Phone number\" \n                                name=\"phoneNumber\"\n                                ref={register({\n                                    required: true,\n                                    pattern:{\n                                        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n                                        message: \"invalid phone number\"\n                                }})} />  \n                            </div>\n                            { errors.phoneNumber && <p className=\"helper has-text-danger\">{ errors.phoneNumber.message }</p >}\n                        </div>\n                    </div>                        \n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Password</label>\n                    <div className=\"control\">\n                        <input \n                        className={`input ${errors.password && 'is-danger'}`}\n                        type=\"text\" \n                        placeholder=\"Password\" \n                        name='password'     \n                        ref={ register({ \n                            required: true,\n                            minLength: {\n                                value: 6,\n                                message: 'cannot be less than 6 digits'\n                            }}) } />\n                        { errors.password && <p className=\"helper has-text-danger\">{ errors.password.message }</p> } \n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Confirm Password</label>\n                    <div className=\"control\">\n                        <input \n                        className={`input ${errors.password2 && 'is-danger'}`}  \n                        type=\"text\" \n                        placeholder=\"Confirm Password\" \n                        name='password2'     \n                        ref={ register({       \n                            required: true,\n                            validate: (value) => value === watch('password')\n                            }) }  />   \n                        { errors.password2 && <p className=\"helper has-text-danger\">must match the qrevious entry</p> }  \n                    </div>\n                </div>\n\n                <div className=\"control\">\n                    <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit)}>Get Authentication Code</button>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Authentication Code</label>\n                    <div className=\"control\">\n                        <input \n                        className={`input ${errors.code && 'is-danger'}`}  \n                        type=\"number\" \n                        placeholder=\"Authentication Code\" \n                        name='code'     \n                        ref={ register({       \n                            maxLength: {\n                                value: 6,\n                                message: 'should be 6 digits'\n                            }}) }  />   \n                        { errors.code && <p className=\"helper has-text-danger\">{ errors.code.message }</p> }  \n                    </div>\n                </div>\n\n                <div className=\"control\">\n                    <button className=\"button is-link login_button\" onClick={handleSubmit(onSubmit2)}>Submit</button>\n                </div>\n            </form>\n        </div>      \n    );\n}","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'commons/axios';\nimport { toast } from 'react-toastify';\n\nexport default function ResetPw(props) {\n    const { register, handleSubmit, errors, watch } = useForm();\n\n    const submitHandler = async (data) => {\n        try {\n            const { veri_code, password } = data;\n            // post verfication code and new password to server side\n            const res = await axios.post('/auth/resetpw', { veri_code, password });\n            // receive a jwtoken from server side if successful\n            const jwToken = res.data;\n            // store the token locally\n            global.auth.setToken(jwToken);\n            // route to the home page\n            props.history.push('/');\n            toast.success(\"Reset password successfully!\")\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div className=\"login_wrapper\">\n            <form action=\"\" className=\"box login_box\" onSubmit={ handleSubmit(submitHandler) }>\n                <div className=\"field\">\n                    <label className=\"label\">Verification Code</label>\n                    <div className=\"control\">  \n                        <input \n                        type=\"text\" \n                        className={`input ${errors.veri_code && 'is-danger'}`}\n                        placeholder=\"Verification Code\" \n                        name=\"veri_code\"\n                        ref={register({\n                            required: true,\n                            })} />\n                            { errors.veri_code && <p className=\"helper has-text-danger\">verification code is required</p >}\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">New Password</label>\n                    <div className=\"control\">\n                        <input \n                        className={`input ${errors.password && 'is-danger'}`}\n                        type=\"text\" \n                        placeholder=\"Password\" \n                        name='password'     \n                        ref={ register({ \n                            required: true,\n                            minLength: {\n                                value: 6,\n                                message: 'cannot be less than 6 digits'\n                            }}) } />\n                        { errors.password && <p className=\"helper has-text-danger\">{ errors.password.message }</p> } \n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Confirm Password</label>\n                    <div className=\"control\">\n                        <input \n                        className={`input ${errors.password2 && 'is-danger'}`}  \n                        type=\"text\" \n                        placeholder=\"Confirm Password\" \n                        name='password2'     \n                        ref={ register({       \n                            required: true,\n                            validate: (value) => value === watch('password')\n                            }) }  />   \n                        { errors.password2 && <p className=\"helper has-text-danger\">must match the qrevious entry</p> }  \n                    </div>\n                </div>\n\n                <div className=\"control\">\n                    <button className=\"button is-link login_button\">Submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}","import React from 'react';\nimport { render } from 'react-dom'\n\nclass Panel extends React.Component {\n    state = {\n        component: null,\n        active: false,\n        callback: () => {}\n    }\n\n    // Open a popup panel\n    open = (options) => {\n        const { component, callback, user } = options;\n        // create a time stamp\n        const _key = new Date().getTime();\n        // create a renderable component in the Panel component with close function, a time stamp and a ser object\n        const _component = React.createElement(component, { close: this.close, key: _key, user: user });  \n        this.setState({\n            component: _component,\n            active: true,\n            callback: callback\n        })\n    }\n\n    // Close the popup panel\n    close = (data) => {\n        this.setState({\n            active: false\n        });\n        this.state.callback(data);\n    }\n\n    render() {\n        const _class = {\n            true: 'panel-wrapper active',\n            false: 'panel-wrapper'\n        }\n\n        return (\n            <div className={ _class[this.state.active] }>     \n                <div className=\"over-layer\" onClick={ this.close }></div>      \n                <div className=\"panel\">       \n                    <div className=\"panel-head\">    \n                        <i className=\"far fa-times-circle close\" onClick={ this.close }></i> \n                    </div>\n                    <div className=\"panel-body\">\n                        { this.state.component }    \n                    </div>\n                </div>\n            </div>       \n        )\n    }\n}\n\nconst _div = document.createElement('div');\ndocument.body.appendChild(_div);\n\n\nconst _panel = render(<Panel />, _div);\n\nexport default _panel;","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';   \nimport Panel from 'components/Panel'; \nimport UserProfile from 'components/UserProfile'; \n\nconst Header = (props) => {\n\n    // Open the UserProfile popup panel when nickname is clicked\n    const toProfile = () => {\n        Panel.open({\n            component: UserProfile,\n            user: props.user,\n            callback: data => {\n                if ( data === 'logout' ) {\n                    props.history.go(0);   \n                }\n                if ( data === 'allusers' ) {\n                    props.history.push('/admin/allusers');\n                }\n            }\n        })\n    }\n\n    return (\n        <div className=\"header\">\n        <div className=\"grid\">\n\n            <div className=\"start\">     \n                <Link to=\"/\">HOME</Link>\n            </div>\n            <div className=\"end\">\n                { props.user.nickname ? (\n                    <React.Fragment>      \n                        <i className=\"far fa-user icon\" onClick={toProfile}></i>\n                        <span className=\"nickname\" onClick={toProfile}>\n                            { props.user.nickname }\n                        </span>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>    \n                        <Link to=\"/login\">LOGIN</Link>      \n                        <Link to=\"/signup\">SIGN UP</Link>\n                    </React.Fragment>\n                )}\n            </div>\n        </div>\n    </div>\n    )   \n}\n\nexport default withRouter(Header)","import React, { Component } from 'react'\n\nclass ToolBox extends Component {\n    render() {\n        return (\n            <div className=\"tool-box\">\n                <div className=\"logo-text\">STORE</div>\n                <div className=\"search-box\">\n                    <div className=\"field has-addons\">\n                        <div className=\"control\">\n                            <input className=\"input search-input\" type=\"text\" placeholder=\"Search Product\" />\n                        </div>\n                        <div className=\"control\">\n                            <button className=\"button is-static\">X</button>\n                        </div>    \n                    </div>       \n                </div>\n                <div className=\"cart-box\">\n                    <i className=\"fas fa-shopping-cart\"></i>\n                    <span className=\"cart-num\">(0)</span>\n                </div>\n            </div>\n            \n        );\n    }\n}\n\nexport default ToolBox;","import React, { Component } from 'react';\nimport ToolBox from 'components/ToolBox';\n\nclass Products extends Component {\n    \n    render() {\n        return (\n            <div>\n                <ToolBox />\n                <div className=\"products\"></div>\n            </div>\n        )\n    }\n}\n\nexport default Products;","import decode from 'jwt-decode';\n\n// store jowtoken locally\nconst setToken = token => {\n    localStorage.setItem('store_token_id', token);\n}\n\n// Retrun the jwtoken from local storage\nconst getToken = () => (\n    localStorage.getItem('store_token_id')\n);\n\n// check if the token is expired\nconst isTokenExpired = token => {\n    try {\n        const _info = decode(token);\n        if (_info.exp < Date.now() / 1000) {\n            return true;\n        } else return false;\n    } catch (error) {\n        return false;\n    }\n}\n\n// check login status\nconst isLogin = () => {\n    var status = false;\n    const jwt = getToken();\n    if (jwt != null) {\n        if (!isTokenExpired(jwt)) status = true;\n    };\n    return status;\n}\n\n// return a list of all users\nconst getUser = () => {\n    if(isLogin()) {\n        const jwt = getToken();\n        const user = decode(jwt);\n        return user;\n    } else {\n        return {};\n    }\n}\n\n// remove the jwtoken stored locally\nconst logOut = () => {\n    localStorage.removeItem('store_token_id');\n}\n\nglobal.auth = {\n    setToken,\n    getUser,\n    logOut\n}","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'commons/axios';\n\nexport default function ForgotPw(props) {\n    const { register, handleSubmit, errors } = useForm();\n\n    const submitHandler = async (data) => {\n        try {\n            const { phoneNumber } = data;\n            // post phone number to server side\n            const res = await axios.post('/auth/forgotpw', { phoneNumber });\n            // route to reset password page\n            props.history.push('/resetpw');\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return(\n        <div className=\"login_wrapper\">\n            <form action=\"\" className=\"box login_box\" onSubmit={ handleSubmit(submitHandler) }>\n                <div className=\"field\">\n                    <label className=\"label\">Phone Number</label>             \n                    <div class=\"field-body\">\n                        <div class=\"field is-expanded\">\n                            <div class=\"field has-addons\">\n                                <p class=\"control\">\n                                <p class=\"button is-static\">+1</p>\n                                </p>\n                                <input \n                                type=\"text\" \n                                className={`input ${errors.phoneNumber && 'is-danger'}`}\n                                placeholder=\"Enter your phone number\" \n                                name=\"phoneNumber\"\n                                ref={register({\n                                    required: true,\n                                    pattern:{\n                                        value: /^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/,\n                                        message: \"invalid phone number\"\n                                }})} />  \n                            </div>\n                            { errors.phoneNumber && <p className=\"helper has-text-danger\">{ errors.phoneNumber.message }</p >}\n                        </div>\n                    </div>                        \n                </div>\n\n                <div className=\"control\">\n                    <button className=\"button is-link login_button\">Submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}","import React from 'react';\nimport axios from 'commons/axios';\n\n\nconst AllUsers = (props) => {\n\n    // get a list of data of all users\n    const getData = async () => {\n        return await axios.get('/db/users');\n    }\n\n    const headers = ['id', 'nickname', 'phone number', 'password', 'type'];\n\n    const data = getData();\n\n    return (\n        <div className=\"allusers\">\n            <table className=\"table is-fullwidth\">\n                <thead>\n                    <tr>\n                        {headers.map(head => <th>{head}</th>)}\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        data.map(row => {\n                            return (<tr>\n                                {\n                                    row.map(cell => {\n                                        return (\n                                            <td>\n                                                { cell === '1' ? \"Admin\" : \n                                                [cell === '2' ? \"Driver\" : \n                                                [cell === '0' ? \"General User\" : \n                                                cell]] }\n                                            </td>\n                                        )\n                                    })\n                                }\n                            </tr>)\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default AllUsers;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from 'pages/App';\nimport Login from 'pages/Login';\nimport SignUp from 'pages/SignUp';\nimport ForgotPw from 'pages/ForgotPw';\nimport ResetPw from 'pages/ResetPw';\nimport AllUsers from 'pages/AllUsers';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route path='/' exact component={App} />\n            <Route path='/login' component={Login} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/forgotpw' component={ForgotPw} />\n            <Route path='/resetpw' component={ResetPw} />\n            <Route path='/admin/allusers' component={AllUsers} />\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from 'Router';\nimport 'css/app.scss';\nimport 'commons/auth';\nimport { ToastContainer } from 'react-toastify';\n\nReactDOM.render(\n    <div>\n        <Router /> \n        <ToastContainer />\n    </div>,\n    document.getElementById('root')\n);","import _axios from 'axios';\n\nconst instance = _axios.create({\n    baseURL: 'http://localhost:5000',\n    timeout: 1000\n});\n\nexport default instance;"],"sourceRoot":""}